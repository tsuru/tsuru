// Copyright 2015 tsuru authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package saml

import (
	"bytes"
	"encoding/base64"
	"io"
	"os"
	"time"

	"github.com/tsuru/tsuru/auth"
	"gopkg.in/check.v1"
)

func (s *S) TestSamlMetadata(c *check.C) {
	metadata, err := Metadata()
	c.Assert(err, check.IsNil)
	c.Assert(metadata, check.NotNil)
}

func (s *S) TestSamlAuthLoginWithEmptyRequestId(c *check.C) {
	params := make(map[string]string)
	params["nononono"] = "fakevalue"
	scheme := SAMLAuthScheme{}
	scheme.Login(params)
	_, err := scheme.Login(params)
	c.Assert(err, check.Equals, ErrMissingRequestIdError)
}

func (s *S) TestSamlAuthLoginWithInvalidRequestId(c *check.C) {
	params := make(map[string]string)
	params["request_id"] = "0123456789"
	scheme := SAMLAuthScheme{}
	scheme.Login(params)
	_, err := scheme.Login(params)
	c.Assert(err, check.Equals, ErrRequestNotFound)
}

func (s *S) TestSamlAuthLoginWithExpiredRequest(c *check.C) {
	r := request{}
	r.ID = "_b533e78c-9c8f-49c6-4dc0-377dd47ed423"
	r.Creation = time.Now()
	r.Expires = time.Now().Add(1 * time.Second)
	r.Authed = false
	err := s.conn.SAMLRequests().Insert(r)
	c.Assert(err, check.IsNil)
	time.Sleep(2 * time.Second)
	// xml enconded with idp publickey
	xml := base64.StdEncoding.EncodeToString([]byte(readRespFromFile()))
	params := make(map[string]string)
	params["callback"] = "true"
	params["xml"] = xml
	scheme := SAMLAuthScheme{}
	_, err = scheme.Login(params)
	c.Assert(err, check.Equals, ErrRequestNotFound)
}

func readRespFromFile() string {
	buf := bytes.NewBuffer(nil)
	f, _ := os.Open("testdata/resp.xml")
	io.Copy(buf, f)
	f.Close()
	return buf.String()
}

func (s *S) TestSamlCallbackDecodeXml(c *check.C) {
	r := request{}
	r.ID = "_a83cd40f-db9c-4366-6bc0-1171655daf5f"
	r.Creation = time.Now()
	r.Expires = time.Now().Add(3 * 60 * time.Second)
	r.Authed = false
	err := s.conn.SAMLRequests().Insert(r)
	c.Assert(err, check.IsNil)
	//xml encrypted with sp private key (priv.key) and base64 encoded
	b64Xml := "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c2Ftb" +
		"DJwOlJlc3BvbnNlIHhtbG5zOnNhbWwycD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY" +
		"29sIiBEZXN0aW5hdGlvbj0iaHR0cDovLzE5Mi4xNjguNTAuNC5uaXAuaW86ODA4MC9hdXRoL3NhbWwiI" +
		"ElEPSJfOGFmNzQxZTc1Y2RkNGNiNTc4ZTlmMDA5NjlkMjkxMGUiIEluUmVzcG9uc2VUbz0iX2E4M2NkN" +
		"DBmLWRiOWMtNDM2Ni02YmMwLTExNzE2NTVkYWY1ZiIgSXNzdWVJbnN0YW50PSIyMDE1LTEyLTA5VDExO" +
		"jIxOjQ5Ljg0NloiIFZlcnNpb249IjIuMCI+PHNhbWwyOklzc3VlciB4bWxuczpzYW1sMj0idXJuOm9hc" +
		"2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U" +
		"0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vaWRwY2FmZS51c3AuYnIvaWRwL3Noa" +
		"WJib2xldGg8L3NhbWwyOklzc3Vlcj48c2FtbDJwOlN0YXR1cz48c2FtbDJwOlN0YXR1c0NvZGUgVmFsd" +
		"WU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbDJwOlN0Y" +
		"XR1cz48c2FtbDI6RW5jcnlwdGVkQXNzZXJ0aW9uIHhtbG5zOnNhbWwyPSJ1cm46b2FzaXM6bmFtZXM6d" +
		"GM6U0FNTDoyLjA6YXNzZXJ0aW9uIj48eGVuYzpFbmNyeXB0ZWREYXRhIHhtbG5zOnhlbmM9Imh0dHA6L" +
		"y93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jIyIgSWQ9Il8yMDU2YTU4ZTlkNmQ3Nzg0MjliNGVkMmQ4N" +
		"2VjNzZhMyIgVHlwZT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjRWxlbWVudCI+PHhlb" +
		"mM6RW5jcnlwdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZ" +
		"W5jI2FlczEyOC1jYmMiIHhtbG5zOnhlbmM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI" +
		"yIvPjxkczpLZXlJbmZvIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjI" +
		"j48eGVuYzpFbmNyeXB0ZWRLZXkgSWQ9Il83ZmZkN2VhY2RjYjQyYzdlYTFhMmNiZjBkZTc4OTdjNiIge" +
		"G1sbnM6eGVuYz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIj48eGVuYzpFbmNyeXB0a" +
		"W9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjcnNhLW9hZ" +
		"XAtbWdmMXAiIHhtbG5zOnhlbmM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jIyI+PGRzO" +
		"kRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNza" +
		"GExIiB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyIvPjwveGVuYzpFb" +
		"mNyeXB0aW9uTWV0aG9kPjxkczpLZXlJbmZvPjxkczpYNTA5RGF0YT48ZHM6WDUwOUNlcnRpZmljYXRlP" +
		"k1JSURpVENDQW5HZ0F3SUJBZ0lKQVBmcHlteU9OQ2toTUEwR0NTcUdTSWIzRFFFQkN3VUFNRmt4Q3pBS" +
		"kJnTlZCQVlUQWtKU01SSXcKRUFZRFZRUUhEQWxUWVc4Z1VHRjFiRzh4RERBS0JnTlZCQW9NQTFWVFVER" +
		"U1NQW9HQTFVRUN3d0RVMVJKTVJvd0dBWURWUVFEREJGawpjM1V5TUdFdVkyTmxMblZ6Y0M1aWNqQWVGd" +
		"zB4TlRBNU1qVXhPVE16TkRkYUZ3MHlOVEE1TWpJeE9UTXpORGRhTUZreEN6QUpCZ05WCkJBWVRBa0pTT" +
		"VJJd0VBWURWUVFIREFsVFlXOGdVR0YxYkc4eEREQUtCZ05WQkFvTUExVlRVREVNTUFvR0ExVUVDd3dEV" +
		"TFSSk1Sb3cKR0FZRFZRUUREQkZrYzNVeU1HRXVZMk5sTG5WemNDNWljakNDQVNJd0RRWUpLb1pJaHZjT" +
		"kFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQgpBTXBMaHdGSzFNY2NNTDZ6SFRiaHlaajJKaVpBNnlOMVV1d" +
		"204cjd1Mk9hY0hQeEN2QUpYZDgrclNRSm5LN29PVzIvNmZ6U3ZCb2ZRCkVWV1dPd0R1L004djdqazNqN" +
		"0RnQ0RzTFQ5aFJJOUNKVGw1d2hXTmhsQU1yQ2NkN1pvWUZKQjRNQ2grMG1SOTVQWWNBWXpEb1NPSlIKb" +
		"GdHRE9qL0o2d0Y1bDViV1c3WXAyVE9ueTJscHZLSlNXTGtlVjFwVmVlVU5mdWFhNUdub0dKWVAwUytHa" +
		"FFsRmNZbnBqNHpSYjhQbQp4SXg5VzdBeUFrMlo2ODBpSEE5Q281dVJTd0VoMVc1VkdzcHBOcURacTMxM" +
		"WtUcUZPWEoxUGxqMnVwc0RzS0FMVFgyUlY4dEJ3MEZ3Cm5LeUhBbkVsZTdKbWVKcE0wbnpTWnlIS0VMV" +
		"0FNU3ZvNHJEd25IOENBd0VBQWFOVU1GSXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUIKQURBOEJnTlZIU" +
		"kVFTlRBemdoQnNiMmR6TG1WNFlXMXdiR1V1WTI5dGdoTnRaWFJ5YVdOekxtVjRZVzF3YkdVdVkyOXRod" +
		"1RBcUFBQgpod1FLQUFBeU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWhqaDU5bnhXVE1rdVVvSUNLM" +
		"3V3eEFCaGlCUTEreWdJN1VQY1E1bnhpClo0ZVlHdjgzd1I0ZjJ4K1F6M3JaWUVvWCtFbkMyWTRyd01JZ" +
		"S9HbnVMWVgxSlVxdXI2bmdEanN5VVB2U3N2ZE55SVpkdlV5V1NpK3QKWEtKUHBnenpZS0NiVHduNzBGe" +
		"GJzdThBTG5YQ2tJNzFhLzlETkZDczh0MlRFM0N6bC9vcHVRUFBlUTh2K2pQN2haOXFQQTFIY0xxNgo5U" +
		"E8yY2ZWK096UERDenp2NWJMS0NiQkpQSDgrRnVIK1EvTzk1WjFDOFcwakptTHZrMHhPcXppblMrZ21lY" +
		"WFaV3draWVEZ2ZaY3R5CmVrMmNESkpxV1ZvejRndmVGckpweHdaUDJFNlltU1JTOEV1QVlNL1pGUUVha" +
		"FRXMkRnZ0cvV0I3T3VZNGd3T0xzRDd6bGFzLzwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhd" +
		"GE+PC9kczpLZXlJbmZvPjx4ZW5jOkNpcGhlckRhdGEgeG1sbnM6eGVuYz0iaHR0cDovL3d3dy53My5vc" +
		"mcvMjAwMS8wNC94bWxlbmMjIj48eGVuYzpDaXBoZXJWYWx1ZT5iQzBuSTVGaFZCVVdISEZCakY2QXA1d" +
		"051SWE3ZS9jcGxBck5ib05SRHZaZXpnNGZGL2dqbmNybSs3ODhSSkVTc3hwT2V6azRJV3FvbkljWVNSN" +
		"GZIL2t5UmNQc05zQzRORlZxc3E3TnhrajYra0Z0cFFDM0tDdGVYWXZTQzlpMW91aWZUK1dLd3k3ZlFEZ" +
		"U92STk2MWNzY0JDbXBETDZFekJBTVU1cnB0WmJDR0pJRWlmU25LVkQzVnFJc0pDbzhpdG1RQTFvNHh1a" +
		"kVjYkEzNUtNYnVXZDhMYUF5UHkwQlJRZ3F4MFF3NThQeTR5d1ZrQWlSMmlRNHFYWkY2UjRBTGpSRTdEU" +
		"nhFeEVGeFRIN3NrYWlEMUlPbnloNUZnL2I3NFBsS1h0UU95Ni9NbDdNcGI0a2Z4ZHVlYTRVaXI2cVg5W" +
		"kE2bWxPRFNGZGxkN1NvUVdQd1E9PTwveGVuYzpDaXBoZXJWYWx1ZT48L3hlbmM6Q2lwaGVyRGF0YT48L" +
		"3hlbmM6RW5jcnlwdGVkS2V5PjwvZHM6S2V5SW5mbz48eGVuYzpDaXBoZXJEYXRhIHhtbG5zOnhlbmM9I" +
		"mh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jIyI+PHhlbmM6Q2lwaGVyVmFsdWU+cXVwcjFmR" +
		"UtJQVovdVlHenJxb1IwWjkrZjRtUERmNkVWcEtMRUxhbXBVcDU1aUtOK3E3U2tDSmlQcG9UelA0VkxHU" +
		"VBRRWJ0aE50T0ROOEM4SE9pdHNwNUNFd25sWUpPeDNjUVZUclB3ektabHl1WmRLeTg5aE54b0lPQTU2e" +
		"jVObGMwbjFKeFdSaThCckVtMHNQVWhSNHFHM0tQNzVNb2JVQXJvWXBESnBiQ3U3Rm5VaDdFM2ZSRERPM" +
		"kdUQXVRWWY0NjVYaUl1UnRXWlRQOHFHSFBsV0ZSTElyc2o3ZXNYU0czRmxIZ2lCekhKWThSbnUzakFid" +
		"E5MRFZmVXZNSUJabmpjRTBzaDBhQkVpRzhYZ0hLK1NhbCtQZklIK1I2elhJelM3M1JWL0RNOFAxWWxqT" +
		"Dc5SUZNYnllUzJydVBkYkVDanl3TzVvMDgwS04wRXpuLzdSVWhQT0dkZzE1WVV4ZmtjK2RVSEJrcjRzS" +
		"UdvcEYwSWxweS9tVHBIODB3amcrWnJRcHh6eGJXdU9qVTU1TUlzN1l1V21FazFRc0hhVUo4dFZVQStYK" +
		"y9XYmw3a0Vvb1lkcVAwWFMvcFF4SVgwUjhYcmoxd3h3YXlhRlBHRS9iU2xFczJBSWxNTUlIcUI3YTEyV" +
		"GFUa0tqaFhTQVZVK3I5b3dZemhTZ2V3SUVzSG9wZW5IdmhXVXVHc3R1YUhRdHpBWDR2N0RMOWR2QkVYU" +
		"VlNZjZuR0duWC83VHdNMnMxc1pzaVF2NnNnU0NhWng1OGhNTFNaQWovYUY0NE5va21wNVRoRnZOZEtMM" +
		"05qWHVkNGE1akJrb1hRK2F3WGxJNFhIcG0wbnVSUU9rMTZzZ29xaXZUSzZXV3czQUE0R1lVNmtPMDhQa" +
		"ndYWFQzT1l3UVhsVStzSmZGRTRWNkJhRHJvYnBWUXpCckEyQjRDU0FUVjNINWNiRmZabDRjZ3hOeFdCQ" +
		"mplYjBreHlsZnRFS0ppT2VOU1VjWFJSQ3lkMjdOUHBpV1lPckxhTlFWNUh5Q1RHTjAwd3RXMUJKMUx0c" +
		"FgxY1hSdU5GNVFQSDIva1Vjc201SUh4RHFlekxXRGZhMXdjcjVpNGphVWhiU1VFcHh2YTl3WWE3SGkxU" +
		"zh6RmltbnFvWW0wV3FuYzZhUUw3Zmg2NnplVjFPTXd6WDB5SXEzNDlTRUV4OXhBcXNuYTMzSWFjQTBOU" +
		"jBSVnQrVlAvTmxYQ3lEWnhxS0RGWFNuMVBMMFN0bUJhVmdyNGFBTEd2RmtOZmtQemUxUVNBOUU3SU9RS" +
		"S9DSDU5VTA5dFp2VVNvODh5VUtjTHNVVDlXVDJwR0RrLzVYSi9mbXEvK1paQkZZUldyalVTVUozOE1rb" +
		"WRwVDhGVmNSSGplVU5EUjZFKzdUM0gxOE1HQnJOaGdTTThNWHpqK3U2dEp6WHZ3YWhDNkJUdHhlTnNGL" +
		"1dsclJsbU9vbHM3MDFEeGRKSlVxUCtKWWpleXRTQmdIYnpNYTlMWjByanlzOEpCTldYY0hlQVFDZG1PR" +
		"lVZcVVuSlNMOGo3N1dtQTJxV0Q4Uy9zU3RucGswWVlHUmYycnZoL3NuTjkxbVFOWDVNdEdON3BEK1NMO" +
		"VFvMG5lRmRaK0w2ZWQyMTMzNjBpWVRjQzBMS1JKV1ZFMzVjQWhPa21MbjR5S2h5SXRNcksvdlEvQUpON" +
		"S9nY1ZPSVdWNmFrb1JwTnliODZ5cCsvYVFRTTh3ejYyVHFIVzl5OVE3MHl6QWI3cFpvYzB4RGtpWXRta" +
		"3dyNlIxVnlGTFpoKzhBMVJGaG1NcHNCTmxXYVlGOE1XMjZGdmJ2bG1hMmVQakZ0VFJwQnJ6cndMdUVXN" +
		"GVTaHZMVG5Wek9pWE5jNTFHZDJrRmpya2RIM05kL3NDZ25tSTNRdmtKSzhxM0ppZWlDOGFtbG5WbUc3Z" +
		"nlUQTlIa3Z1QmZITXlsVzMxTzZIU0l3dldldnhjUCtyZGw4SlgwZTZ1VUdsOFUwbTJZa2VGelFDZzV4U" +
		"TQwb29KSWRlUTlJd2ZHcmdLaCtUS200OGxLRkZjdWdXY0hjSS8xeTRlbEJIaEp2V3dqcjZHanE2ZytFd" +
		"mJOdVY4bDQyL0xldHlZcTJpMWg0d3NLSnhSc3dFZEVBNXd1RE4yeFJvWHoxRHRvS1FrV3NaTGFyc3I0M" +
		"FlRbUVvcG1ja1ZGbExWN3hKZ0lBNW4rRzNVV09mTkJFYlNzQzFkc21wSWl3VkhZSlFFMkY0MG4zMlRqU" +
		"llNTjhGb2FxSXdFRTV6Y2dDY1VmQU92UzV0ak9MMnRydGVPOWVrUUdjWE5NMVVCSjJ6WWlYejZnSEkwZ" +
		"nJnMjdBSG4xMzlDRUFDd1RSOHFaM0lUOVh2RFpiZVFFclV5NUpMSmRvZHlvaFpFayt5SnJFQkZvU3pWU" +
		"FFHdXV0ZU82RFZQVTZPVnFYWXJtU0d1cjBMUGUvUXkrR0IvOU41b2NJQ1N2RC9YUmpyazZzMlN2Tk9jW" +
		"EZCNlJlVkx6S04wS2N4NnJ1Vmo0cHd6U0UzMTlsUXpDN3MxWXJCZzJCYm9lTnJGYU54cGdsVi9OdDdMW" +
		"ktReUhsNHIxNkhXMkxIazRvNjBCRUplMk9nMGRoRXptV2ppWlp5QUVqalNvekE1RUhwdkVwSjk0T2gxV" +
		"mdUeDhVdDluc0NleS9HY1R2NjJCU09HdWdYOFQydnJtcVdndm1LV2RPeEdWZ1lEK2pSR29aQ2paUFU3N" +
		"nUvM1lSQ3R1MTJIU0xzUVVJOVNMS1ltRFlobXVHemRzZHRFWTFEeW5vZko3UzRRK1ZzbmtIeDU1SkU0a" +
		"VF6QkR0TEhURTRHRUMxMFcrNi91OHJZK2JoNUgzZmVXR0Foa1g0M25lMTRobWtUN2pOQ29RV0lFb0NKd" +
		"0lPeFVCbEtWWWlUOUs4SWxORU1uOVlSR2dqWGRqcWJCQ3hXamNPUGVUY0Fobk1nbGNSaW9UUnVUV0VhV" +
		"kFrbHNwTlUwVEowRjQ3d3VEdkpWKy80clNwaHVYaXF1YlgrRVQrM3ZPYkt4OU9pdHhXSFF2NmxCQktZR" +
		"U5wWW5SYTE1aUNLMGhZRW5RMUs4TWlqdVNiODAyK3czcUtNK0JFSGNJdGtsWUcxODBVN2c5SnhaTmN2N" +
		"HdBdS90MVIvbUoxOE5hTDM5czVyWWI0MmR2VmRaRmtaaFFCS0FESGlmL3JQQ1FPbktlSU1Ka3k1WDVWa" +
		"09tbWxmcGR6UXJ1N1pZMFE4OUxQOFBvcDlZdGVYeXlDL3hGRE1SemZOajJhamxVWVdUeTE0NkhzQ0JzW" +
		"UtxNjN1bmluUFg0RHhnZXhIWldKNFNtd0x2OFMwU1M4Ni9Ielo4TmdmbFlRaGRQTVR2anRQK3EwbXhxc" +
		"21tNzlpMmRjTmJkY3lwUVlTWDd2VmtMMW5WRFFEOFNYbms2STYzUFIzeEg3Wm5DNEJvNGxwQ25zSk9wR" +
		"zlmTTIyMXZ2dEsrL3BKYW5CZjRibnVpZVYzQTVySG00MUF0RkhKWUVkb0FqUUFnaUF6azJleTFXaUY5V" +
		"GtQTXgvcWRUR1k3Z3VsTHpzRDJuTTZYaDR3aThNd0xGK3laOFJIcUVycWJTVHZxWTlRdVBZcEIzSTVVW" +
		"mQyMHpkWEZmQmFzQXE3RGJmZ0pyODg1bEtPdExja3pGOUI0MFlOMDgwZWphQ2pGbFZjUW00YWllNGxLV" +
		"TZpSDlWcnFQNGg5OWQzYkN5cndSWDMvYkhhMXBIWkNoRUVSSFpUSUY2V3hCRWl6VUtzc3RFa2Nmd001L" +
		"2xQZU0zdnFBVUphcFovajgvUGwzaW5EeC9SMkkwZ3plSnpCM3RqTmxkYzZvS2xTSWg4MnZmbTdkUW8rN" +
		"UU3MTE5SkRyR0k0ci9FZnltQTlYVmRhNXlyeGhpSHhkSFptTGNpcnUxY0JweWxuQzlCZmdTOUtUS3BaR" +
		"WFSSm56QWo5Qlo2T1QyQm9uSTdRUllWZjNIVkVaMFcxTHdYNUNjVFhCc0UxYjRLbitySnIrRWdFMVMxR" +
		"0JweWV5TUVLOW1GbnNSV3pramN3MFJHaGU3WGZRcGZtclJlamZCZytFRGhmRnhaZXVRdjZDenV4a0Fwd" +
		"nI5UHg0ODVkVThnR1VPWGhYMTFqMnBBamJMYlBzcEY5YWFaeFJrUlh0aVEyVkFLdytIR0RvS3B3MDV4b" +
		"0JoaUpSUUNHclI3MUEwSnRnSWR6MC9PKzFzUTdpVUZxaEIvS1R2SWl5QjYyQTg5Mm5xdHU0YmlnaUJqc" +
		"DdPWHBLdGZ6Ymt4c1RvanY5aWpyNFljd3ppN1RRcUtUcGlhNEQzVldnRmpxNTkrMVpJRUJqQVhPNWVuY" +
		"TRQZUVJdEpZYmJIMFp6MjlSSERaMnh2NFY5NndSU09lTzRFdmNVNHBVV284MHpVYW9aMW5LWnZPamhtb" +
		"k1jYmZEaUswN01xL2IvRzhKNHM3bkVTb0wyVUF1cGRuR1MyNmhmWXZQMjluK2Erc1BtWGdFM2hLV2NvR" +
		"1JmWnRYNXRSNmllNjVsL3dvYXBvK1lJaDFjdFRlc1RDQXJOWDQyVFlwK2MzTlp1cEFSRFhsZHBVSnVoY" +
		"3J5S3Y0WWI4SW9zTGxGbUNjc2tPVjZyY04ySklmNG9PbnNXYUZKREtZa1lCVjZlQUJqK0xOaXNDeWFUc" +
		"ndVc0s1c1drVFg0NWJFSnM4UWpEUFNibmRnNkJ0eWhwQ2NQMmJOR0dScFJEanVBYmxnTFFpMUxCTzZ6N" +
		"zdENDcwanZBLzA1d0pxMmdpSGpVVHpVRlY2aVZQOG1UdlJqYUcvOFd5S1YvaXRMZ29VczY4eDZvbEk1d" +
		"GpVUzFoam9EQU03Qm1TM1VCOWRNWEY1cEgyeHpZbURqaXZqb3FOa0lRRDY5VHowaDN2SW9UQk8wQUxlR" +
		"2FLZVBrQ0k5d1hOK1NnMnhIWjdZRzFjZEtXaXdRTnh1ZFhNSndxbjBWUzkyNWFudWlzTktTN2FOQjc5Q" +
		"UxoSS92ME5DT25xc1czbkQzZWNHdDBtdXdvNktyTFhCY3BYWFQ4VHVCM1QyOEY3d1RITTE4RjJvd0NxQ" +
		"zhrZE03dnAvbW11eThZeVdRS3FnMFNSeDY0NFBLcEtZK3c0TGZEcmttRWJmS2Q2dlZFOEpSMXp0QmM1e" +
		"llDMkJtalBMUmVucEtBTGFYWEVMSUZERE1xaENtQmc4TXRCdzM5MTMxQ0VJTThYUHlKN25NNHBxc0xEZ" +
		"Fo4YlB0djJRYU1OVXJFeG1hN0RUWktoZnFxUDJiKzVlWHhWRWN4Z1A2eStNN3V1cjIrMzUrdTFDaTVtV" +
		"1VBTFRTdW52RTVqbVJyQVFvNURyek9tdC9GYjFGWGtHK2RBUTVMY2JxZ2lQaTZYVE53N3B2Z0xnKzlvK" +
		"0kyTThQOC9zeitMaEFzdlFxYU5CZHFvQXpuYXJoZVJ0RitYWkQvVm9EVXg2aCtXV2p0NE1udUNvN3RCT" +
		"Dl3K1pOWmZKMWE3Rnp4VThlVUxHdDRxb2VxUTRYYU5NejB4TEJJc2V2ZzdLbzZOTk1PYW9VUTRpT2JJV" +
		"GcyUVhVdDFLdlFoL25JeHk4Vk1iTGhqTFdtMitlMzRSM3Y3NG9ydWNhLy94OXdnL25rSHphYXo0TVFhY" +
		"2x2ZzBnbkIxKzk2SzlsTkxBb3F5a3lLUkVqYmdOZ3diYk9id3FUWHNka1NiOHUyeER2REJrdXdiTENvT" +
		"m1nc2k0c2JUVUxtQkc1TFdxRXFCS0FFYlZMMlFrL2NJRnVMYktITkljUEdPRy9tWEhIeFNCcUhPWHNIT" +
		"000bDR4cW5CdXppMDAzMmpTQ3F5NkxxMzh5MmZVRE43elBBVjNkVHdXUHJSTUZFNnNZNGR0TmVhb0REZ" +
		"HBDWXV4NTAxNllwWG1QR0FyUkx1OU00b0J4OXVUSjBYa2w0WFczMWNtaDBDT2JrY3ZJY0Uxd0I5RWxqb" +
		"kJrTUI1dk0vUG1nZHV1NHVMdWY1dXlaaHRhQkwxWWUrcGNpaStDY2Q5QTZ0NjRMWXN0OGxDVjd6VUpkM" +
		"VZWSE1LRmVZdS9NSTZMMGNUYzJsZklNNTFNM2piU3FDbDMxenp2eEJ2L0Yzb29ndUEyT2ZBYnVIT2V1a" +
		"lhnckNhZjFKaU1UdXRTRU9OdHlSRGNZR3hWaCtMSy9SdUpmOUk2dDR2RUtsdUoyRlVtaVBrNGwwVnFkb" +
		"FkvNmRiRzkzTEJoUkhNRTluOVN6dVNoa0NMcFFQc0Y4MDF0THJNMUErdjBTRkM3QzNMb01pK1VXUDJkS" +
		"GtPOVBmZW1wYlhJRHJOdUVYRXlTV0wyWDlGM0l0M3FyZUx5TFpva0NRaUd2eUJjUVRBeG5laWRiRUdNK" +
		"0c1cC9uWmd2UjF1YjdxRjBFenNQa0dLenVZbGY3ZTZEVlpMYXorV28vVkg1cENvRnJLSHZxT0lhckxKd" +
		"FR0NS9IQk95dmpTUmg2TUdLYm5pSXZhVEFIeitWQUpSRnZYYjBpV01KdHUxR2l3MGNDYXAyYTdtOXI2N" +
		"E9KeXdoVEpHNVVOU1RYdEFJTytlOUx0cUplc0hnYUZaU2ttbXNPc094OFpoRlFzQkZKMCtYeEhJb3BMS" +
		"GVDMmV6RzEzTGNUdXJUK1lKeUNSd0hoalEyRkJSaGxxQ1lRQTVXKzNtRHR2bVMwWWxJZFU5Z2o4b251M" +
		"DE3TTZZTVFXZVJEaXVtRElvT1czTk4rMkhWUUlnZDYyd0hXOTJINVdlcU91b0dZR3Zud0hLZ1UvWFp6c" +
		"FpRbE84N3NzQU5UalJsT2Y0QUg4Y3ZlUkc3MHBpb1B2QTRFQnBvb2lhU1dtdTVzbHZDQ3NJTXRwMS9XY" +
		"2Q4eENoOXpYSVRnVHVVRjFINHF6b2lIV2h3eDM1eDMyWVpIVXBveWxCL3FYM1graHpRRk1HZFN6K2M0W" +
		"GNHNnkzNGV1cjh6TytmUUtVZXY0K2xxRkJ3SEFZbGgwNCsyQVlZV0U5clIvaGdJdmZUbFB4VW1lekNMV" +
		"05aT1RvbHlZWmFPb2tycUFyMjhnbzUrdTV1d3JaWXl6T2xtVGx5azNMYXlSOGFqTDJoR0VWNk5GOWFOT" +
		"nZlSjhkY3RiYnhSVUZDbU1TNllLbnV5RTlBejdOWU5vaDM4bHluMm5HelhUUzFsV3BPd3M4K2lwbnZHW" +
		"HRPQktuRytxb2lRWDVUak9Uam94Z3YrZnMvY0dLZFF3bjlCTm5OZTY0b3A1U1RvakM4dmw5T3ZzRitlM" +
		"GZBbG9zZUZET0o5RDZybGswNTN1SUlJNFhWWDRXQi9qZExpSHQxRWw0RDdxV09FMnR1L2tPZVdaYTZHR" +
		"nlBR0dyZ0IwOWRpUFpaK2VhOE83WjVkOG8yMnpiblNBMG5QL0pTcThkbWJiUHhYWm9iWUdYcEZCQXpTZ" +
		"UtETHpFdUJ0S2FXQ0YrcjJsRHRENmlpaWE4Vm9JMXRuUXIzSmZ0d3pQU3dkN1Q1M1lkdDdjbUNoSHJrO" +
		"S91VjVaMXNMcmt3d3BjVFRCeTFlSm4vRk1od2t4Znk4SXc5OWFYUGhQSEMvVkcxZksvMjZSbjVQUUdRb" +
		"nFNbXNvaGFKSVJIa3VsUktoYklscGU5a3pNZ3RqODRINCtFbmkvUlhUOU45cWh5dkVFTm9mZmxWUktJY" +
		"3pTMjdOeGI1WVQwbmdPOW5JMkdMaEQwV0lncVlMMG5wbDUzRDB2TU1oQUo3NHBsMHhFdXZaaVI4UU9WY" +
		"2plZTlUWjc5WmR3cmFhTTYxK0dmS3BOR3F1Z1MyQnBoMkRFc1c4ZHFyNDJKL0M4ZjZsTjVwM1pTR296Q" +
		"2lTK0NlNndMYkprcEtiMHE3Mk5SYXBKZHE2U0lONjhTb1E0aDlqR2xKMGtZa21nRTdyNjJhZ0oraGxUW" +
		"WplVTlhVTBGbzVWLzBnY1JXOVZtUWpGdUV4SVVBUVlBZ2tYNms4a2M1M0hqVFJpVlIvV2RaWDRqaWVsO" +
		"E44UXN0K1hld1QyczlkdE01VDhSYkVIZm5YdHduSDR3N0hWU0dVSEMrSCtCQzk0Z1J4YldmQ3BBam9QQ" +
		"U50STQxM2FhcmFpRFFRMzhPY0ZZS3p4MzQ4bHhqZ2ZlRm44YUhaOWM5L2w1cDZiRlZEZmpNejFNOWRHb" +
		"0syNFdXMlpoZ0FQNFZRbjZabjVDMmE4a2ppK0xTdVd0d1dsdTBLU2pPd1FVZ2RSdGNpYnBIeVJEa0Jrb" +
		"TRWZ3grbmVLU1pXZlF5dDJFamRFd2R5QTlTZGF1SlluV0JZSzRKOU1CT1B4b1UvdHBIWDRZakRTZExZV" +
		"zNLWXZmQzFuMFJZQi9PNUFsRHdrc1oydlpFSzZJeWUrUFZTWC9ac2NHOWJKc0dieFR2QWxBeENPcngyW" +
		"nlSVWlNRldrbTgxc3lNSmpIam5nQVNRYXVNSU9IVVZuZXRkZlhqbFBnOTJZeWRjUjNaUEJya250Q2lJU" +
		"FNjZXNzNWFPdWJWdVNKN0tDcXpvcGs1UFRxRDZwKyttRm9nSmtQdmlRbDd3Q3IrU2h2TjE0eEU2bnp5c" +
		"1Y0TVJla2o0Q2UxY05mNEo4N0hSU1Z2VWxjcXY1dWNsZzVPQ3pxOXFiUFYzMkwwWHdZM2FzTUdORUJ6U" +
		"llxVUtrZXhJSnlQTXJpK1I0T253YVc4WVZDNDdBQ3kwVEtsaVBRQlFZN1IrbFVlbXVBVVVmUEZoR2hTb" +
		"lo0VE95RXdVcWE5NGhWU0pIdUFUMHRBdHZ1UlIxL0Q2bzljRXIyNkh1ZjV3VFQxYi9HQkoyZGE1OC95N" +
		"FhDbWw1QUxFQjBlNGxwYnpINFRCcGlhVm9wKzZqL3daaDVHQmtRcHA0MDFsNHU5OVpIT1dheURvTUtPN" +
		"is4eFVvU1loU1R3M1BnN1hrN3FKZml0eHB3WUlDREsrcW5sVFlpeGtmVEZyRVdaVFI4WUl2ZU8vMzA4Y" +
		"WwwMTlzYnVFdDFlTmtyRDNNZG1NRURHd0JiMDJlUzBlSjBqZnJUMnl5aDVMWEFwK21yM1BqRHpQU1RVS" +
		"TgzVTJhYjJvZWNEMmxMeU9DRGVsZ1RIWFRvZXRwZGVvUTNyNldZVkhsZi9Wd1g1bmdYcWp2ZzV1UW53L" +
		"0lHWlBqU3VMUVZ5K3NqeTgyYXhVWkpidHFuaHdiZTUvNTNoL2FsSjVhOCthWEhtMVZvNUdNc3h0ZzNHT" +
		"VUySG5hZG5sUjFmbVdVb2E4M1cyTmJPSFpPdFhIUHZOR2t6VTQ5RzhsVU9WK0NnY01NUFRWTTFEc2tFV" +
		"FltV2E2eE9hZlBtcUF0amlVUGlVSVRNbXRDbWVXYXhoSE9Bb2E2TGFzMGlBeEF0NDNuVTBjRHZ2MTFDa" +
		"0JjelJyVzU0a3BaN2FJWmFpb0ZhRmFndi84MndwRWtLRG9HeXlXKzNTNnVxR2F3NnpRMjExZHhDT2U3c" +
		"EJvK2RHQlNjcW5qMmVKOTE2Ym42OFAwYkdNQVdSRTc5UVNQTVVpVU9KZWNHaUEvamRxTE5YTW90S0VGY" +
		"WdyTnJibmFUZ2Fxb3BSdUtWT3dsUGVId05KZHFRSnBvOVFGN3hjdzhXMFZYS3ZHYmgzMVQ5blBTZE1Sb" +
		"lFRaFpMckQrbmVOeDFZY1lEcFlLSlRIb2h0NU1pWVZuNTR0bFdsRHJEeWxzVnFjZmtHUitlbGpHQWFlc" +
		"1ZuZFRPcUVubENHemVPNnZ2Sy9VOW1tK3FvM2ZwV3ZTM0tDb2ZzOGhVTTM1SWZQSE1Wb3pzejFidENaT" +
		"WlXMkFxbjNHMjdyN1VGc2JkRUFsWXU2RjBKaWtRRlBFY0xIdTBhWCtoMmxSREVWREM0ZFdwOEJnZ1ZTM" +
		"nY5UENmUmEzSmM1R2liZncvSFg5VFJjZEFWODI5M1BFSUVOQkl2dmJLQTRNTnZIV1dHT3o4MDNqaEtUN" +
		"1AvUFpVa0lDbXFFYUdmRHQ3Rm94L3NLTU1RWDlURWk5Nk9IUTlDZFZIbzhaaTZDVFJxLy94cDY0QSt6V" +
		"TJBTjZmeWZIMTZRWkhrVXlOVmZEZ0ttU1F0emlWR29sZ1MyblY2UWlHYlRQRGt6NTJ1OVpVTnl6aW1mS" +
		"GpPbGtLY1NNSE5XU3QwVXhHTEZ2dDIrZVl5YU1jYk0ra0tzT2p4eFI1MzRsKzRwZkF0OGt0Y3VhdlV2b" +
		"1pubjlzNXJLdEFnK2MvVGp0YXJNcTBUdDFnaU91bmtSSnZhZ3VDVTFYbU9LSWZkZ1p3Wi9ZYzZ6bnYva" +
		"GdBRFJiY3MwNEd3akNWK1BNenUzM2k3dzZsd2c0RUMzeG93RUVBamZyd0QxdXpOUEFuME9HTFpjVi9JY" +
		"Wh1bnRybjdKa0xmOGFaNGdXeTJGMit1dThZUW1Gb3RUOU5nbm9GakV4YVFiY2szKy80VWR3RlNYcVFae" +
		"W1RazR5RkZERzJWNkZhV0FFSW1rcm1SUjV4OFhOaWowT0RSWCtHN3JSQkxDQ1pRQytLY0llQWgyQlROM" +
		"VpyTUZNQk5rVFBLUytOeGZRTHYvTzh6anFLcytWYmFwVlRTMDFtcnU1TVN5VTRoR2p5a2FHdnAwSTg4M" +
		"nZ3TUFNSStpY0JWT1AwcmljUjJTRTBQMVBPbHQ3TE1haTJHUDZmMDVPQWJ5Vkg3WXZFV3ZzenFuS0JaY" +
		"25MNC9CTjRtZ2NEb0ZtbVBZUGdlZTk0TkR2Q1M5TmN2Yy9NWGVtMTFzelBhSTMyWUFQY0tlUmZkNVEzR" +
		"mZjOW9ReWJVVlUvQmh6SkdUelI4ck83b0lBdzBMUHdtWFBhYmZuYXkyZERMQVFoQVhtdElueWVCVmVBT" +
		"loxUy92U3BwMHAzWDVzL3phYndvYXVOTEhYUHpKdXdDcm1XazRieGVwWTEzRjg3TkZ0QXd1NHdDQVRaa" +
		"2Z6RUhHUjRYUzBNZHRMUWxvOVVFZnZFOTZadis2NzNuUjJpSVhrMzVJYUQvQWRqNStWZUZleEdVOUorY" +
		"XRVblljRUQzVmNpNEZ4eFQwU3VPQWtTMkQxUUNEQjdpaGZQblhtelNmOC9YUDFRQXlSMTFkRWdpN3F1R" +
		"0wwaFhpck5IU0xleUo1UjhnSEVaWDBLYjh3Qk1FemcrSnhYVUsvZDhWL1EzOWJRMnhZVTYxcmdOKzE4R" +
		"2EyL09xNWNuUW90Q09Ld1hEK2ZGMTVrQUZOQUI1ZTc5L0hJK1l0UlN5RXorSTFpZ0JWWW41Rkh0aVVzN" +
		"XJZdUlHY3ZvZVFBTVZxMVFSSXJkd25oS284UmRxQTlUNWRZL0NWRzR5dG1UUXJ1QmIwdEp0Y0VraklxT" +
		"zNpaFFBeW85a2JRVWFUQjJiM1doV3I2Q1ZUbDAyUkQ0S0hmenpiYkVaMnQwYkx2dGk1aHk3aXRHZUpMS" +
		"zZrL0x0cVlHZ25nV2JjYWNncmhpTzh1VWFoSjZrdGtJK2xYNXltNjJudHVyekR2ajZCQWN5R1Q4ME9PU" +
		"3JPWlNnbnRobldYM2JZVEVGYjFhdUNIeWpJeUc4MHJaSmorbW1SS2RjSk5COU4rOVB6cERjbklVSFNuZ" +
		"zFsRHZaaHc1MnJSU250TC85YVFpdndxV1hFYzhNaklMSDgyQlFNQU0xKzNNcDlqUWNXUzBWZjc0ZDVHU" +
		"2VvSjZOa3dBNUE1NDJYckxjZmRrTVVjdnU3ZDkzdm52S0t1cmdOZE5TWmJBZCtGMGh6UUN3aFRUQ2FoT" +
		"EtkQXJIQk80aldQblNCTFgvQ0V2aHFvbVFwK1pQTlhQZHlnYTdBekgvYklnektnVHI5dUZ3b1ZaYks0V" +
		"nFDVWZUZHk3b0Q3K0hOMURHNGFKeWxMdllBYWtZdmN2R29Fb2pEVjdWMUFjejlScFJySjN1T3ZBTWE1M" +
		"0xRVU9KK0FuY1BvTnFFdUlRRTRPYW9LK3VOMGJoNmFXZnUydVFNMUdBUllET3gxN2lVRkhBRTROMzhyc" +
		"VN4UnVoeU5HYXl6anQwOCs4WUFrVnZBMTRPcnFjaXVlSWpGMTRBek0ydnNjeEJLdHRqL1k3TFAyYmQ4d" +
		"E04VW5NUU9yWlFOeGNqTm4zZU9MakJpamdabjl4Y3h1cUduTzlPd3BobzhGdzlUU0Y5WkhjL0tFOHdNb" +
		"kdWOGpaVTViWkE5V1RLQWN1MWZscklFT25ZSXlTWS9BY3NscXo3U0YvOFFiK0tVUzcwd1M5VjM1VmN3c" +
		"GhTL2dpc0p3WUxkcGd1SVptY1VOVkVid0ZZUXY4OWhYekVoZnJSbVdJZ0U3Z1NKYlJ4RWhXOWtwdEg5V" +
		"0tXRU95b01GcGF3Nzc2TkRDNEJORk5pVUVDTzBRMFdSUk4yQXJTVlVMOXh3Mmc3eGh0amRlaU5hVkY4Z" +
		"Vo3a0sxMHJ2em1qc2xqNEt4Ti9ZVTBiSzZXeUxjemtDTk1aY1Y1MEZKQ2laRHM2TXc2bmJqcHlKbHA3Z" +
		"UdXZStWc0RNNC90UTZFa1FMTWpxVzdxWTZLNUdyZGp0OG80QStLeVA0dXVXZzZEUlpYYkYzcjd5MzhFd" +
		"y9lM1pucWFqbkVqN1BybnVBNGN4MVNQcnMwYmthcGdSd1ppZGtHczR5Yk9uZ0NGRU84RndZT05rQmx6b" +
		"VZxanhJUmh0QTJhNzBGZzNCY0xkeUJUb05MNGRQMjlvRXpHREN6R2RZSlc3R3lMQXZnVksrZVFoVmhZb" +
		"FZ4VU1wUjYrMjE4WkhKYVAxaGEzblRyYlN5cFJqQzFSdXFpTmJhTzhhVTg0bHNleXo5Ny93MW5zMUZJO" +
		"Wl3UlZTSkFGbVdZTFdXb0lMQ2o2SEVWSGlRa1dKNkdKYVFGRGlOSkV4NThOUlR1NXJVNGd0ZC9kb1RsS" +
		"WNSR1U5aHFMNE9UMWxVWDVpeTcxbDk2VUp1czduS3BJdzdRYnBIRmZnbXliKzlFV0tDZ08wUlAyeFRle" +
		"EtUZSswanoxNHdLbjJCT1JDZkVUMS9OZ1JVNU9EQlQ0SjdqbHZXR0NIU3NvYTYzd2xjeEpVb0VTZTdYY" +
		"jJwd0dVQ2VjZFhJK1RydTVDRUI5a2g2Sm41emFra0pBYTUrZFpQRFRCN0UyMEZPejNkVllUczdHSkFuQ" +
		"mJQQ2Q1UC9FNnNpdzNJRkRnaXl4UTJERlZ3eEtCYXhIVkE3Vk1yWGhzNzZaMG40NFhGMVM4SG9RNE81L" +
		"3ZITU9hN0MrcGFPNllEd3ZHWVpGeW80YVN2YnUyam0yZ29haWZENm1ueFVVc0JCeWVDNUNPb2d0R0NWO" +
		"WNJbUgwUFhpSWRlRThHTU02cEIzUjhiMHFFdkVBZDdxdnk5R1krTlVMWHJjc3hTdFBwL3JEVzFnV0lGS" +
		"0hmVmNmVmhYYmpMczlVaHdlMGlwVjNvT01obkx4Sys5QU44RTZVNGRmdHlOWVArYWlNSGM5TmFOazNjU" +
		"lJhMXg0TzNTelJocDZtMS93VnROR0RoVkd1aEZ3SzE2WTk2YS93amR1WlpQVmY1WDIyWXdqalFmR3U4Z" +
		"XN4L1BjNkdNV0hNVVFaakppcHBxUUZjcUcrM3g1TUxhelpCUFp1aFdYdHFmS05BSWFubzg2cXJidXA2b" +
		"nJKb0lZYk5jQURpdUlQSm53NTA4SWllMFJUNDVyRS9RQVJFZStUS3RQYUM5QWhuUnl1MW1mVDhoaW5VU" +
		"mtRTkIwdkVQVUw0M1BYMFhTK25DdndoTFBYSXQycG1sTjI2eE5PRnovZHA1V21aT25jVHFQMkZIR3lme" +
		"kxSV2h5bmZJNFlHM2tteWVwaEpXUUtUQ2RjYnhDSCtkOFZ3eW5YTWVNRUVHNmZhRlVZOGFIVllYVUVGV" +
		"VhDSVpDSDRtWVNiVzMrSGthcGo0QWREN0xZZ0ZYME9BcmZxVWZ0SHZEMW1yVXdCblIxZzBuKzA0QytNN" +
		"FNrRm1YbXNteEVkZVBCTUpqbTFGbWxRL3J2K24yK0EwdWVlTXlyM1V4Q3pvMDhwTXFDclZFK09SN0h6Q" +
		"0taTzZ2VVVvTkNlenFwZkFoUkhYbE9hN0tkd05CWGt3OFBFb0IxcDh6Z1pMZDVPeC9yVzZ2NGd4SDc4Z" +
		"EhKenF6WnViZ0Z0eWZHMXVkcmxHa0JnZE95Qnk1NS80a1BLazJyL0F5Sm1EMXB0aWRHWXhzM3JFRjJ3e" +
		"EN6a0xyK21XejhmckhXaXhSWjN2bzlPdGZyeVZZQ2VIVWhKclJTSXZGRkhIYTBXR1ZqWE10OTZGemwwU" +
		"FozMG1EZmVGY1BtalJLeGs3RU1zRk1PSUZMeVdmaUFjN3p1ZG5iSDR0U3NGMlIwSFJacjgrTkZ5WmpkO" +
		"E9nU3JIS2pVY3NyazBWUEUxVE1jUGlCdC9XVWNpVmN3aGM5aVJEUURrY3dCN1ZGbXp0WW9TNlBpWXhIV" +
		"Dh3ZzFaZk1ENTBMUVJjdzNJMk9oeXFiR1h3L2ZjZERDd3ZyUEgzTUZHRnpDRkNFZ25jOVhFOUY5VGR3Z" +
		"zQ4ZXczV3R1Q1VIMVgwQ25uTnZiVUVlejBIRlM3TEx2UWV0dEdkMzZzRUhqd3g0VGhRN3oya3pVUHVic" +
		"Hd3TVZmdWRoV0F4c2pzUUtYN1Y3UGRtMzdjWncrTU9VNGNWeVU1c1YvU04zWTh4a1hWUFFqTXlhV3Uyc" +
		"mhkVGU5bC9zRmdBQlZKNVhyWGhVWGFBdmlDR01ncXgvNmhSYXdjYno5eXl5RlRsRFdvcjJIV1pOOHhtR" +
		"HU4dzNKZnA0Y3lvMUVpNGF4TWJUUGZhcm1XR2JTSkFRVFZqaEJkVnBOYnJjUGFKM3V4dlFSUS9VdncxN" +
		"HdZZnd3aHRZeFZvOTEyTzArZWZQeWE5Tzk2SEtmRlNhSU5kMjN1Ny8xcjBHVHN6NUEzQ3dDZ1pCMjc4c" +
		"3JpUjBDdTlMa2xuZU1QS0s3Nlo3c2gybm5BZDIyVVJCUDNPci9vYkRlMUI2bE9ZUEswcjZGMGZlTDZza" +
		"no4bitEUEpYdFgyVndPSjNCNjhZUlFYSURsSStlcE4vaHZTeFl2UTJYSGllekNUU0dOOWpFSnQ5aUNaR" +
		"URSalpBWEhHM2tLeno2N2NUNE9ESWlTVkFDZUYwandTc1E0NEhhcVpwZ1k5QXdMSUVMNWxtUUMyamc1T" +
		"zZnNTlFcFZnQncxUVNBME9Tbm9HbnBzVmxmaUNmMlZmekRrQ2FKTjV0YWF1eTg1K3hOT0dkMkF2bkhkV" +
		"FNMNnA0U2tvQXBydDFTRGF4TU9pcjFZbFluNXhrVVhzL2VYdklwY0grT2dTV1g0MXdOSThLWGQ0MWhhU" +
		"FhYbmJja005blRDY1JiQ1Uxcm9tMkgxMlJ6YkFFbmhtTlhwaDJXSCtPRENSaUV5VnlIK05HTnk1c29MO" +
		"Wh4STBvbXFyK3VxZjV3dVVkMDBPek4rcHR2eFpVbkhJVGtUQVM0TUtaM3F3R0lqMFA5NGVGWlF5N2ZHN" +
		"zU1SFNUZ3dKYzRGcS9VWmFVeWY5OXg3U2R4YlZyYVlXbVFpS2plM0R2MG1IZDhqU0hGWk5FWWJ0cHBsK" +
		"2xhV3BJOWU4YVV0Z3VnK21uakFPVGFkZ0hpVkQ1US9GdlJ5UUNsVjZvUUV4cXdDVEVXNnk4L1p0UHJyT" +
		"EQra0dhaUpXM0lGV2hZOEQrY0x1Y1pqQkJ2cTNldVdDdUR6SG1UdzEydDRiZ2JQZ1JsczlCayt5YnB6V" +
		"llxU0dkSXBpQUlYOFBFVEdsanJHMWQrYUlSTzRDdGQ5dmx6VlVGN1NvYTlidlVkdXdLcjJOMTlPY2VIW" +
		"GtzZVZrcXdaL01PcCtKSjJsSkVHWHg3eVZnd0x6bFNEZ2UzWTZkT1lEZ0piNjdVa2FZR2lETUwybnZ4c" +
		"lpXTzIwbmp5Wmp0SmhzK1dMaCtZa29tWjFnelYwUEJIcytYYVRTSDlGN2t0R3lqYzdqUmFqQlJEUDZmR" +
		"TdGLytwTDJPbk5YRUJ0UFlRVEp3RVk5QmF5cGFEOHhUSzVIaUhWREVXYzlCY2lZR2lXMEJZUHpwQnF5M" +
		"Hc1VnlPMUlxT2hTcXBGMmFaZTIwVlp2ckk5L3pEUC9lK2NMWjNJYk0xN2xTY2JQaWhjNEJtdUxGaWE5V" +
		"W14ckRiZkVhdGtvVHRaSW5oL25VQ2NaUjZHa0x1L3g4SmU2RitMZWtKR1V1L1M1RzhIQUJpYTFMaFNDW" +
		"XdaQ2Z4RGx1NUxQTFkzbmZaS1cxbmQ3UE9jV2RraEVicHVZYWRTSU5FSFVsZTROKzgzSm9DUXFITzk4b" +
		"TU1VnFKVWpwclFxVks2QzlQcW5hMXNEc3Y1bXJ5VnhlaG9mMDI4RUp0Q2ZQT24xVlkzcENlblcyeEkrc" +
		"StlZlVLZVpodG8xeCtSR01lYlVBTjB2R0tndE9LUS91QXY1bzN3a3M2b3I0SG01K290dkttcStzQ1Nyd" +
		"DVtYUs5R1k4RXlKSm1Ud1BPMWxxdmNXVndQaGRSZE95YWc5YmcxOUs1bGs0MUhTMHlqQXdHQ293VUJDb" +
		"FpoWkhvWmN4L0VLVVFTWXlKSzdaZDljbTVXek0rMVFvdVJ2SlNOM28wbmR3ZjF4VFd2TVdZQUI5SjZLb" +
		"XNlM3NNMHJ6dmEyblpSRG5xOFpJQTFVTENiSzdOTXBnYk83eU5sNFRLYkJOQnNBU1dwSGZQSXFmRllZZ" +
		"DQxRjBZQXhmOTE3ZXJJd2l2MGhqNytqSFVMa05ZQlROSk1pVUpJWW5ZN1ZnSmRrQUJ5R1l2T1VadHB6c" +
		"zBlck5lWG9yNVZSU085VUVVVzAyMWVKemF6ZmFtdFZDK2hVRnRnbXd4bkJwZ3dkU3JYdkk2SXFtMFdPU" +
		"2w2RnJkenRuQm12Vm83LzhyQlRYc2JJV25wT1hxVU9SZmJNTkRpd2F4S2hIS1VKV3U3TmVtUUNMWERja" +
		"VM4WEtTMFpMcUZTVGdlUVVldEV0Wm9yR3ovdVg4MlBISjMzZEp5WlNoOWUrVTk0bXZhbDJHbE02b3hvb" +
		"GpYVzk0ZVc0ZXhuTjNqU1E5enBQTlpselhxdWZvV2dsN2hzMVFjME8xVU1rMHlQRTlpSzdQZlNYMlRiR" +
		"DYweTJSNU9qQlZmY3FNTERNM0RPdlhDTWwwRFF1cm5jOEtPaTRqSHMzM0MrNkVFeHZnTWJ3ZTNBZXVYa" +
		"XdSaGkweWZ1Nm1rd1dXM3NZY28wZHEySExBanFwbGRZeTFMM3o5blpNdUxZSFR6bXBSUVFwSC9seVFCQ" +
		"TJGM0tjY21rcU9MTTRKYmorRW9YQjJqL01aOGpZRHNFZGVzaDBRQ3hIWXJJQmFPaEhxelhabTJ6SDZ5U" +
		"npuSHpkci9BakNLbzZ1UkNpTW1qb0lmK0VPeVVWcXFoTDg4MHBza21VbUFaYXEvazNjTnZZQXdyQy94U" +
		"Fl3L2k4MFUyYkVtZlZMc2NKMGtqWUhTK21nRGtpc2JIZllwVzdjdWxvbmY4ejFid3JYV1U1RTZNeStze" +
		"DNOallNQklTSzhMZWFtUGZHZGJGR1RJZjJRWXZ2ak4yNk5ONTl6R05Ma2hLbVR5bjlpOENsbEJJYlVvS" +
		"URuTXlBTTdza0RSRHhOU0ttMGQ5YStZOWJ3MmQxeW5YUm80Rm85MmdwdWp0TVp5bzBZcHRrTVVHb3k0R" +
		"XM5cjFTMEhGWGVWUmI4dHJNYzNqOFdHYzZXM3NUMUdtUEVxUktPNU45KzF4ZDNnN1B1bTVQNWhEOXoxW" +
		"GlIb3BrL1dqQWFaUmMxUEdPMXVyQzhkMjZBY2Erb2pHeGlsdFlSY0FnUFBYN0tPMDVqUGlZdWtyUlZnb" +
		"DlZY1AxYkc1SklHZWl5RUxwQmpHMmhYS0poTHh0eitNUnhKbGRadVEzaThpOGdnUWFJUXdrWGc5RlRBZ" +
		"DJIdWtldDJYMVF5WVpXZ1ZOdlBIcG9JeDNhcEJ6TjZJR1Ivb3B0d0VsZ25uaSttY3lBMytVVUdPUU44R" +
		"no0eVJwNkZnUTZnWTk1V1ZuemlCMTN0STJFdzhFTTBOSUNiT210RFdIVHBZVC8zcnZkd3hEY3VWODdzQ" +
		"m9GTWpVWnNZWXY2THFveUV1UnY2bmhZbUhPbFF5WExHeEg0MXFLVlRKSVZMOXVObWVMbVRvQjdNM3hwe" +
		"XpzcFkwTEdYTlV3UUpmSWFDNDdiU3V4SVo5RnpiVlFTVGtTcjAvbmJCY2EwVHdISFlJWDhFVndNTisve" +
		"EF1RnczK3NnTEUyVG1iS0phSXg1azBSaUdkcXd1dGU0VU5Fcm1yVVV6MkphY09halF6dUhFSkZ2VVVBL" +
		"2d0eEpNODJNS3NIdUZJQ0xhWW5HUnpDYkxDclcrOVNhajBxMUsybUtVdkM4Y2duSW9IQ0Vlc01rRlpKe" +
		"XpEZnNlSDYyanIzQ2d6cmU3ZTEyc2k3ZmxKa2J1K3NzcTBYWk9rYWhXSTM2ZWVQMHpjaG8rMkN2eFZYV" +
		"U1xcXU4ejVTL0s2YWh0aUJvYndjN1NzMkVKbkxzb1BmdzBaNHNVWGpVY1V2eEh2L1kvZU5BcWZvcU5BR" +
		"VFRQUhjZzlaRTd4NUNRb2NUT1A0U0xmQlI5cDZRTnNFZ1BmbXpiN0RVVmRMZTk1MVZHeTlSV05OVzdqO" +
		"S9yWWlaaWdoTDRWc0FpWlFuUUFhak9GSUNFQVo4MWR2Z3RRd0EzejBTUkZUMXpuYXJONnhrd081akVoN" +
		"1lWRTI4RVJNNHUrSUs4R2Jmdjdoeis5ZUNqQVdVV0w0WHNZS0U2ZDkzemdXbjkxbXN4V0NqMTdIQkMwV" +
		"VREcTFlSEtXRkRHc0hhbWoyRTRUVFBIN2MzSjJ3eHAyQnlhVlBFbHBXeXBlQ0tRTmxObXNtNWgrZWFxT" +
		"nhRRjBBU2Y4cW9qU1Q0QStFbklDM3RQVFlkeGFBd0kxbUJtYUwxZ0tYb0R2dlEyelNGakc2QUpIY2RiW" +
		"DNxZm5USzlHanJnTFBmWGxwRyt6V2VLck9LSmtpUEt0SEtZaEVaKzQyaUlIZU43MllTQ1hpM0NPVG5pN" +
		"2tHZFFwWHJ5S240c0xzNWFkTjYza0pjam1mVXFqZW84aXh2SmlReTRuck5nd1kzbHJBZ085SVk0L3ZLM" +
		"DhmNjNnUXZCdFpGaXJiM0RWUXdUUlZnT0ZzVG9TN2o2aVRvdUtsRG40UGtodFdqdVNYaWNKYm5IUDVUZ" +
		"EZ1ekRMSkNMMElodGM4OExOWXFFdnlLR01NUTJVamRvdHFXTmR5a2h5dXVweDhlWEIyUDh0YzZjTG5NV" +
		"nZ2N2piT3hNZTRGVnZzVkFsemlreW9qb2FhK3lYTWVPWUZBV0M1YVVOUmJubEo4QWZWWExzYW40bXhUe" +
		"EJRTmtLaTNJaFR4MWVNZ2RldURJczZzUjRqeHlQakxpYzlEYWJ4aHdRdEZEUmJQZmpuSURXUzlSM0Ztb" +
		"1A3MWhjODFqQ3JyMVlnbjU3ZWhGa08zY1VpS3Ric0NLK2RLZjNBRFRxbXd5L1hIOW1LbjVJQUhRTTwve" +
		"GVuYzpDaXBoZXJWYWx1ZT48L3hlbmM6Q2lwaGVyRGF0YT48L3hlbmM6RW5jcnlwdGVkRGF0YT48L3Nhb" +
		"WwyOkVuY3J5cHRlZEFzc2VydGlvbj48L3NhbWwycDpSZXNwb25zZT4="
	scheme := SAMLAuthScheme{}
	response, err := scheme.Parse(b64Xml)
	c.Assert(err, check.IsNil)
	c.Assert(response, check.NotNil)
	requestID, err := getRequestIdFromResponse(response)
	c.Assert(err, check.IsNil)
	c.Assert(requestID, check.Equals, r.ID)
	req := request{}
	err = req.getById(requestID)
	c.Assert(err, check.IsNil)
	c.Assert(req, check.NotNil)
	email, err := getUserIdentity(response)
	c.Assert(err, check.IsNil)
	c.Assert(email, check.Equals, "nuvem-teste@usp.br")
}

func (s *S) TestSamlAuthLoginValidRequestIdUserNotAuthed(c *check.C) {
	scheme := SAMLAuthScheme{}
	info, err := scheme.Info()
	c.Assert(err, check.IsNil)
	params := make(map[string]string)
	params["request_id"] = info["request_id"].(string)
	_, err = scheme.Login(params)
	c.Assert(err, check.Equals, ErrRequestWaitingForCredentials)
}

func (s *S) TestSamlCallbackWithEmptyResponse(c *check.C) {
	params := make(map[string]string)
	params["callback"] = "true"
	scheme := SAMLAuthScheme{}
	scheme.Login(params)
	_, err := scheme.Login(params)
	c.Assert(err, check.Equals, ErrMissingFormValueError)
}

func (s *S) TestSamlCallbackWithInvalidResponse(c *check.C) {
	params := make(map[string]string)
	params["callback"] = "true"
	params["xml"] = "<? invalid xml response from idp ?>"
	scheme := SAMLAuthScheme{}
	scheme.Login(params)
	_, err := scheme.Login(params)
	c.Assert(err, check.Equals, ErrParseResponseError)
}

func (s *S) TestNewTokenReturnsErrorWhenUserIsNil(c *check.C) {
	t, err := newUserToken(nil)
	c.Assert(t, check.IsNil)
	c.Assert(err, check.NotNil)
	c.Assert(err, check.ErrorMatches, "^User is nil$")
}

func (s *S) TestSamlAuthName(c *check.C) {
	scheme := SAMLAuthScheme{}
	name := scheme.Name()
	c.Assert(name, check.Equals, "saml")
}

func (s *S) TestSamlAuthInfo(c *check.C) {
	scheme := SAMLAuthScheme{}
	info, err := scheme.Info()
	c.Assert(err, check.IsNil)
	c.Assert(info["request_id"], check.NotNil)
	c.Assert(info["saml_request"], check.NotNil)
	c.Assert(info["url"], check.NotNil)
	c.Assert(info["request_timeout"], check.Equals, "60")
}

func (s *S) TestSamlAuth(c *check.C) {
	user := auth.User{Email: "x@x.com"}
	token, _ := createToken(&user)
	scheme := SAMLAuthScheme{}
	strtoken, err := scheme.Auth("bearer " + token.GetValue())
	c.Assert(err, check.IsNil)
	c.Assert(token.GetValue(), check.Equals, strtoken.GetValue())
}

func (s *S) TestSamlParseXml(c *check.C) {
	xml := base64.StdEncoding.EncodeToString([]byte(readRespFromFile()))
	scheme := SAMLAuthScheme{}
	response, err := scheme.Parse(xml)
	c.Assert(err, check.IsNil)
	c.Assert(response, check.NotNil)
}

func (s *S) TestSamlAppLogin(c *check.C) {
	scheme := SAMLAuthScheme{}
	token, err := scheme.AppLogin("myApp")
	c.Assert(err, check.IsNil)
	c.Assert(token.IsAppToken(), check.Equals, true)
	c.Assert(token.GetAppName(), check.Equals, "myApp")
}

func (s *S) TestSamlAuthWithAppToken(c *check.C) {
	scheme := SAMLAuthScheme{}
	appToken, err := scheme.AppLogin("myApp")
	c.Assert(err, check.IsNil)
	token, err := scheme.Auth("bearer " + appToken.GetValue())
	c.Assert(err, check.IsNil)
	c.Assert(s.reqs, check.HasLen, 0)
	c.Assert(token.IsAppToken(), check.Equals, true)
	c.Assert(token.GetAppName(), check.Equals, "myApp")
	c.Assert(token.GetValue(), check.Equals, appToken.GetValue())
}

func (s *S) TestSamlCreate(c *check.C) {
	scheme := SAMLAuthScheme{}
	user := auth.User{Email: "x@x.com"}
	_, err := scheme.Create(&user)
	c.Assert(err, check.IsNil)
	dbUser, err := auth.GetUserByEmail(user.Email)
	c.Assert(err, check.IsNil)
	c.Assert(dbUser.Email, check.Equals, user.Email)
	c.Assert(dbUser.Password, check.Equals, "")
}
