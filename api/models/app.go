// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// App Tsuru app
// swagger:model App
type App struct {

	// App description
	Description string `json:"description,omitempty"`

	// App name
	// Required: true
	Name *string `json:"name"`

	// App plan
	Plan string `json:"plan,omitempty"`

	// App platform
	Platform string `json:"platform,omitempty"`

	// App pool
	Pool string `json:"pool,omitempty"`

	// App router
	Router string `json:"router,omitempty"`

	// Custom router options
	Routeropts map[string]string `json:"routeropts,omitempty"`

	// App Tags
	Tag []string `json:"tag"`

	// Team that owns the app
	TeamOwner string `json:"teamOwner,omitempty"`
}

// Validate validates this app
func (m *App) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTag(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *App) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *App) validateTag(formats strfmt.Registry) error {

	if swag.IsZero(m.Tag) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *App) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *App) UnmarshalBinary(b []byte) error {
	var res App
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
