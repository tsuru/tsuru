// Code generated by go-swagger; DO NOT EDIT.

package app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateReader is a Reader for the Create structure.
type CreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateCreated creates a CreateCreated with default headers values
func NewCreateCreated() *CreateCreated {
	return &CreateCreated{}
}

/*CreateCreated handles this case with default header values.

App created
*/
type CreateCreated struct {
}

func (o *CreateCreated) Error() string {
	return fmt.Sprintf("[POST /apps][%d] createCreated ", 201)
}

func (o *CreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBadRequest creates a CreateBadRequest with default headers values
func NewCreateBadRequest() *CreateBadRequest {
	return &CreateBadRequest{}
}

/*CreateBadRequest handles this case with default header values.

Invalid data
*/
type CreateBadRequest struct {
}

func (o *CreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps][%d] createBadRequest ", 400)
}

func (o *CreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUnauthorized creates a CreateUnauthorized with default headers values
func NewCreateUnauthorized() *CreateUnauthorized {
	return &CreateUnauthorized{}
}

/*CreateUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateUnauthorized struct {
}

func (o *CreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apps][%d] createUnauthorized ", 401)
}

func (o *CreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateForbidden creates a CreateForbidden with default headers values
func NewCreateForbidden() *CreateForbidden {
	return &CreateForbidden{}
}

/*CreateForbidden handles this case with default header values.

Quota exceeded
*/
type CreateForbidden struct {
}

func (o *CreateForbidden) Error() string {
	return fmt.Sprintf("[POST /apps][%d] createForbidden ", 403)
}

func (o *CreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateConflict creates a CreateConflict with default headers values
func NewCreateConflict() *CreateConflict {
	return &CreateConflict{}
}

/*CreateConflict handles this case with default header values.

App already exists
*/
type CreateConflict struct {
}

func (o *CreateConflict) Error() string {
	return fmt.Sprintf("[POST /apps][%d] createConflict ", 409)
}

func (o *CreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
