// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetUsersInfoReader is a Reader for the GetUsersInfo structure.
type GetUsersInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUsersInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetUsersInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersInfoOK creates a GetUsersInfoOK with default headers values
func NewGetUsersInfoOK() *GetUsersInfoOK {
	return &GetUsersInfoOK{}
}

/*GetUsersInfoOK handles this case with default header values.

OK
*/
type GetUsersInfoOK struct {
}

func (o *GetUsersInfoOK) Error() string {
	return fmt.Sprintf("[GET /users/info][%d] getUsersInfoOK ", 200)
}

func (o *GetUsersInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersInfoUnauthorized creates a GetUsersInfoUnauthorized with default headers values
func NewGetUsersInfoUnauthorized() *GetUsersInfoUnauthorized {
	return &GetUsersInfoUnauthorized{}
}

/*GetUsersInfoUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUsersInfoUnauthorized struct {
}

func (o *GetUsersInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/info][%d] getUsersInfoUnauthorized ", 401)
}

func (o *GetUsersInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
