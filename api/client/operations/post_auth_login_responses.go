// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostAuthLoginReader is a Reader for the PostAuthLogin structure.
type PostAuthLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostAuthLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAuthLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostAuthLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostAuthLoginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostAuthLoginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAuthLoginOK creates a PostAuthLoginOK with default headers values
func NewPostAuthLoginOK() *PostAuthLoginOK {
	return &PostAuthLoginOK{}
}

/*PostAuthLoginOK handles this case with default header values.

Ok
*/
type PostAuthLoginOK struct {
}

func (o *PostAuthLoginOK) Error() string {
	return fmt.Sprintf("[POST /auth/login][%d] postAuthLoginOK ", 200)
}

func (o *PostAuthLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthLoginBadRequest creates a PostAuthLoginBadRequest with default headers values
func NewPostAuthLoginBadRequest() *PostAuthLoginBadRequest {
	return &PostAuthLoginBadRequest{}
}

/*PostAuthLoginBadRequest handles this case with default header values.

Invalid data
*/
type PostAuthLoginBadRequest struct {
}

func (o *PostAuthLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /auth/login][%d] postAuthLoginBadRequest ", 400)
}

func (o *PostAuthLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthLoginUnauthorized creates a PostAuthLoginUnauthorized with default headers values
func NewPostAuthLoginUnauthorized() *PostAuthLoginUnauthorized {
	return &PostAuthLoginUnauthorized{}
}

/*PostAuthLoginUnauthorized handles this case with default header values.

Unauthorized
*/
type PostAuthLoginUnauthorized struct {
}

func (o *PostAuthLoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/login][%d] postAuthLoginUnauthorized ", 401)
}

func (o *PostAuthLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthLoginForbidden creates a PostAuthLoginForbidden with default headers values
func NewPostAuthLoginForbidden() *PostAuthLoginForbidden {
	return &PostAuthLoginForbidden{}
}

/*PostAuthLoginForbidden handles this case with default header values.

Forbidden
*/
type PostAuthLoginForbidden struct {
}

func (o *PostAuthLoginForbidden) Error() string {
	return fmt.Sprintf("[POST /auth/login][%d] postAuthLoginForbidden ", 403)
}

func (o *PostAuthLoginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthLoginNotFound creates a PostAuthLoginNotFound with default headers values
func NewPostAuthLoginNotFound() *PostAuthLoginNotFound {
	return &PostAuthLoginNotFound{}
}

/*PostAuthLoginNotFound handles this case with default header values.

Not found
*/
type PostAuthLoginNotFound struct {
}

func (o *PostAuthLoginNotFound) Error() string {
	return fmt.Sprintf("[POST /auth/login][%d] postAuthLoginNotFound ", 404)
}

func (o *PostAuthLoginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
