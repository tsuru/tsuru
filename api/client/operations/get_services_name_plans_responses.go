// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetServicesNamePlansReader is a Reader for the GetServicesNamePlans structure.
type GetServicesNamePlansReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicesNamePlansReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServicesNamePlansOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetServicesNamePlansUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetServicesNamePlansNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicesNamePlansOK creates a GetServicesNamePlansOK with default headers values
func NewGetServicesNamePlansOK() *GetServicesNamePlansOK {
	return &GetServicesNamePlansOK{}
}

/*GetServicesNamePlansOK handles this case with default header values.

OK
*/
type GetServicesNamePlansOK struct {
}

func (o *GetServicesNamePlansOK) Error() string {
	return fmt.Sprintf("[GET /services/{name}/plans][%d] getServicesNamePlansOK ", 200)
}

func (o *GetServicesNamePlansOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesNamePlansUnauthorized creates a GetServicesNamePlansUnauthorized with default headers values
func NewGetServicesNamePlansUnauthorized() *GetServicesNamePlansUnauthorized {
	return &GetServicesNamePlansUnauthorized{}
}

/*GetServicesNamePlansUnauthorized handles this case with default header values.

Unauthorized
*/
type GetServicesNamePlansUnauthorized struct {
}

func (o *GetServicesNamePlansUnauthorized) Error() string {
	return fmt.Sprintf("[GET /services/{name}/plans][%d] getServicesNamePlansUnauthorized ", 401)
}

func (o *GetServicesNamePlansUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesNamePlansNotFound creates a GetServicesNamePlansNotFound with default headers values
func NewGetServicesNamePlansNotFound() *GetServicesNamePlansNotFound {
	return &GetServicesNamePlansNotFound{}
}

/*GetServicesNamePlansNotFound handles this case with default header values.

Service not found
*/
type GetServicesNamePlansNotFound struct {
}

func (o *GetServicesNamePlansNotFound) Error() string {
	return fmt.Sprintf("[GET /services/{name}/plans][%d] getServicesNamePlansNotFound ", 404)
}

func (o *GetServicesNamePlansNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
