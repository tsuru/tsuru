// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetEventsUUIDReader is a Reader for the GetEventsUUID structure.
type GetEventsUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventsUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetEventsUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetEventsUUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetEventsUUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetEventsUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEventsUUIDOK creates a GetEventsUUIDOK with default headers values
func NewGetEventsUUIDOK() *GetEventsUUIDOK {
	return &GetEventsUUIDOK{}
}

/*GetEventsUUIDOK handles this case with default header values.

OK
*/
type GetEventsUUIDOK struct {
}

func (o *GetEventsUUIDOK) Error() string {
	return fmt.Sprintf("[GET /events/{uuid}][%d] getEventsUuidOK ", 200)
}

func (o *GetEventsUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsUUIDBadRequest creates a GetEventsUUIDBadRequest with default headers values
func NewGetEventsUUIDBadRequest() *GetEventsUUIDBadRequest {
	return &GetEventsUUIDBadRequest{}
}

/*GetEventsUUIDBadRequest handles this case with default header values.

Invalid uuid
*/
type GetEventsUUIDBadRequest struct {
}

func (o *GetEventsUUIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /events/{uuid}][%d] getEventsUuidBadRequest ", 400)
}

func (o *GetEventsUUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsUUIDUnauthorized creates a GetEventsUUIDUnauthorized with default headers values
func NewGetEventsUUIDUnauthorized() *GetEventsUUIDUnauthorized {
	return &GetEventsUUIDUnauthorized{}
}

/*GetEventsUUIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetEventsUUIDUnauthorized struct {
}

func (o *GetEventsUUIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /events/{uuid}][%d] getEventsUuidUnauthorized ", 401)
}

func (o *GetEventsUUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsUUIDNotFound creates a GetEventsUUIDNotFound with default headers values
func NewGetEventsUUIDNotFound() *GetEventsUUIDNotFound {
	return &GetEventsUUIDNotFound{}
}

/*GetEventsUUIDNotFound handles this case with default header values.

Not found
*/
type GetEventsUUIDNotFound struct {
}

func (o *GetEventsUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /events/{uuid}][%d] getEventsUuidNotFound ", 404)
}

func (o *GetEventsUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
