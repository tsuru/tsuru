// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutAppsAppTeamsTeamReader is a Reader for the PutAppsAppTeamsTeam structure.
type PutAppsAppTeamsTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAppsAppTeamsTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAppsAppTeamsTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutAppsAppTeamsTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAppsAppTeamsTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPutAppsAppTeamsTeamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAppsAppTeamsTeamOK creates a PutAppsAppTeamsTeamOK with default headers values
func NewPutAppsAppTeamsTeamOK() *PutAppsAppTeamsTeamOK {
	return &PutAppsAppTeamsTeamOK{}
}

/*PutAppsAppTeamsTeamOK handles this case with default header values.

Access granted
*/
type PutAppsAppTeamsTeamOK struct {
}

func (o *PutAppsAppTeamsTeamOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}/teams/{team}][%d] putAppsAppTeamsTeamOK ", 200)
}

func (o *PutAppsAppTeamsTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppTeamsTeamUnauthorized creates a PutAppsAppTeamsTeamUnauthorized with default headers values
func NewPutAppsAppTeamsTeamUnauthorized() *PutAppsAppTeamsTeamUnauthorized {
	return &PutAppsAppTeamsTeamUnauthorized{}
}

/*PutAppsAppTeamsTeamUnauthorized handles this case with default header values.

Unauthorized
*/
type PutAppsAppTeamsTeamUnauthorized struct {
}

func (o *PutAppsAppTeamsTeamUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}/teams/{team}][%d] putAppsAppTeamsTeamUnauthorized ", 401)
}

func (o *PutAppsAppTeamsTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppTeamsTeamNotFound creates a PutAppsAppTeamsTeamNotFound with default headers values
func NewPutAppsAppTeamsTeamNotFound() *PutAppsAppTeamsTeamNotFound {
	return &PutAppsAppTeamsTeamNotFound{}
}

/*PutAppsAppTeamsTeamNotFound handles this case with default header values.

App or team not found
*/
type PutAppsAppTeamsTeamNotFound struct {
}

func (o *PutAppsAppTeamsTeamNotFound) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}/teams/{team}][%d] putAppsAppTeamsTeamNotFound ", 404)
}

func (o *PutAppsAppTeamsTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppTeamsTeamConflict creates a PutAppsAppTeamsTeamConflict with default headers values
func NewPutAppsAppTeamsTeamConflict() *PutAppsAppTeamsTeamConflict {
	return &PutAppsAppTeamsTeamConflict{}
}

/*PutAppsAppTeamsTeamConflict handles this case with default header values.

Grant already exists
*/
type PutAppsAppTeamsTeamConflict struct {
}

func (o *PutAppsAppTeamsTeamConflict) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}/teams/{team}][%d] putAppsAppTeamsTeamConflict ", 409)
}

func (o *PutAppsAppTeamsTeamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
