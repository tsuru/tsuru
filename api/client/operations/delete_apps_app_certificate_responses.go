// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteAppsAppCertificateReader is a Reader for the DeleteAppsAppCertificate structure.
type DeleteAppsAppCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAppsAppCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteAppsAppCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteAppsAppCertificateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteAppsAppCertificateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteAppsAppCertificateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAppsAppCertificateOK creates a DeleteAppsAppCertificateOK with default headers values
func NewDeleteAppsAppCertificateOK() *DeleteAppsAppCertificateOK {
	return &DeleteAppsAppCertificateOK{}
}

/*DeleteAppsAppCertificateOK handles this case with default header values.

Ok
*/
type DeleteAppsAppCertificateOK struct {
}

func (o *DeleteAppsAppCertificateOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/certificate][%d] deleteAppsAppCertificateOK ", 200)
}

func (o *DeleteAppsAppCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppsAppCertificateBadRequest creates a DeleteAppsAppCertificateBadRequest with default headers values
func NewDeleteAppsAppCertificateBadRequest() *DeleteAppsAppCertificateBadRequest {
	return &DeleteAppsAppCertificateBadRequest{}
}

/*DeleteAppsAppCertificateBadRequest handles this case with default header values.

Invalid data
*/
type DeleteAppsAppCertificateBadRequest struct {
}

func (o *DeleteAppsAppCertificateBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/certificate][%d] deleteAppsAppCertificateBadRequest ", 400)
}

func (o *DeleteAppsAppCertificateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppsAppCertificateUnauthorized creates a DeleteAppsAppCertificateUnauthorized with default headers values
func NewDeleteAppsAppCertificateUnauthorized() *DeleteAppsAppCertificateUnauthorized {
	return &DeleteAppsAppCertificateUnauthorized{}
}

/*DeleteAppsAppCertificateUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteAppsAppCertificateUnauthorized struct {
}

func (o *DeleteAppsAppCertificateUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/certificate][%d] deleteAppsAppCertificateUnauthorized ", 401)
}

func (o *DeleteAppsAppCertificateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppsAppCertificateNotFound creates a DeleteAppsAppCertificateNotFound with default headers values
func NewDeleteAppsAppCertificateNotFound() *DeleteAppsAppCertificateNotFound {
	return &DeleteAppsAppCertificateNotFound{}
}

/*DeleteAppsAppCertificateNotFound handles this case with default header values.

App not found
*/
type DeleteAppsAppCertificateNotFound struct {
}

func (o *DeleteAppsAppCertificateNotFound) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/certificate][%d] deleteAppsAppCertificateNotFound ", 404)
}

func (o *DeleteAppsAppCertificateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
