// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeletePoolsNameReader is a Reader for the DeletePoolsName structure.
type DeletePoolsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePoolsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePoolsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePoolsNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePoolsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePoolsNameOK creates a DeletePoolsNameOK with default headers values
func NewDeletePoolsNameOK() *DeletePoolsNameOK {
	return &DeletePoolsNameOK{}
}

/*DeletePoolsNameOK handles this case with default header values.

Pool removed
*/
type DeletePoolsNameOK struct {
}

func (o *DeletePoolsNameOK) Error() string {
	return fmt.Sprintf("[DELETE /pools/{name}][%d] deletePoolsNameOK ", 200)
}

func (o *DeletePoolsNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePoolsNameUnauthorized creates a DeletePoolsNameUnauthorized with default headers values
func NewDeletePoolsNameUnauthorized() *DeletePoolsNameUnauthorized {
	return &DeletePoolsNameUnauthorized{}
}

/*DeletePoolsNameUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePoolsNameUnauthorized struct {
}

func (o *DeletePoolsNameUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /pools/{name}][%d] deletePoolsNameUnauthorized ", 401)
}

func (o *DeletePoolsNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePoolsNameNotFound creates a DeletePoolsNameNotFound with default headers values
func NewDeletePoolsNameNotFound() *DeletePoolsNameNotFound {
	return &DeletePoolsNameNotFound{}
}

/*DeletePoolsNameNotFound handles this case with default header values.

Pool not found
*/
type DeletePoolsNameNotFound struct {
}

func (o *DeletePoolsNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /pools/{name}][%d] deletePoolsNameNotFound ", 404)
}

func (o *DeletePoolsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
