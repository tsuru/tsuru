// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetEventsEventReader is a Reader for the GetEventsEvent structure.
type GetEventsEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventsEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetEventsEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetEventsEventBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetEventsEventUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetEventsEventNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEventsEventOK creates a GetEventsEventOK with default headers values
func NewGetEventsEventOK() *GetEventsEventOK {
	return &GetEventsEventOK{}
}

/*GetEventsEventOK handles this case with default header values.

OK
*/
type GetEventsEventOK struct {
}

func (o *GetEventsEventOK) Error() string {
	return fmt.Sprintf("[GET /events/{event}][%d] getEventsEventOK ", 200)
}

func (o *GetEventsEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsEventBadRequest creates a GetEventsEventBadRequest with default headers values
func NewGetEventsEventBadRequest() *GetEventsEventBadRequest {
	return &GetEventsEventBadRequest{}
}

/*GetEventsEventBadRequest handles this case with default header values.

Invalid uuid
*/
type GetEventsEventBadRequest struct {
}

func (o *GetEventsEventBadRequest) Error() string {
	return fmt.Sprintf("[GET /events/{event}][%d] getEventsEventBadRequest ", 400)
}

func (o *GetEventsEventBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsEventUnauthorized creates a GetEventsEventUnauthorized with default headers values
func NewGetEventsEventUnauthorized() *GetEventsEventUnauthorized {
	return &GetEventsEventUnauthorized{}
}

/*GetEventsEventUnauthorized handles this case with default header values.

Unauthorized
*/
type GetEventsEventUnauthorized struct {
}

func (o *GetEventsEventUnauthorized) Error() string {
	return fmt.Sprintf("[GET /events/{event}][%d] getEventsEventUnauthorized ", 401)
}

func (o *GetEventsEventUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsEventNotFound creates a GetEventsEventNotFound with default headers values
func NewGetEventsEventNotFound() *GetEventsEventNotFound {
	return &GetEventsEventNotFound{}
}

/*GetEventsEventNotFound handles this case with default header values.

Not found
*/
type GetEventsEventNotFound struct {
}

func (o *GetEventsEventNotFound) Error() string {
	return fmt.Sprintf("[GET /events/{event}][%d] getEventsEventNotFound ", 404)
}

func (o *GetEventsEventNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
