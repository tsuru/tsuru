// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostAppsAppnameDiffReader is a Reader for the PostAppsAppnameDiff structure.
type PostAppsAppnameDiffReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAppsAppnameDiffReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostAppsAppnameDiffOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAppsAppnameDiffBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostAppsAppnameDiffForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostAppsAppnameDiffNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAppsAppnameDiffOK creates a PostAppsAppnameDiffOK with default headers values
func NewPostAppsAppnameDiffOK() *PostAppsAppnameDiffOK {
	return &PostAppsAppnameDiffOK{}
}

/*PostAppsAppnameDiffOK handles this case with default header values.

OK
*/
type PostAppsAppnameDiffOK struct {
}

func (o *PostAppsAppnameDiffOK) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/diff][%d] postAppsAppnameDiffOK ", 200)
}

func (o *PostAppsAppnameDiffOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAppsAppnameDiffBadRequest creates a PostAppsAppnameDiffBadRequest with default headers values
func NewPostAppsAppnameDiffBadRequest() *PostAppsAppnameDiffBadRequest {
	return &PostAppsAppnameDiffBadRequest{}
}

/*PostAppsAppnameDiffBadRequest handles this case with default header values.

Invalid data
*/
type PostAppsAppnameDiffBadRequest struct {
}

func (o *PostAppsAppnameDiffBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/diff][%d] postAppsAppnameDiffBadRequest ", 400)
}

func (o *PostAppsAppnameDiffBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAppsAppnameDiffForbidden creates a PostAppsAppnameDiffForbidden with default headers values
func NewPostAppsAppnameDiffForbidden() *PostAppsAppnameDiffForbidden {
	return &PostAppsAppnameDiffForbidden{}
}

/*PostAppsAppnameDiffForbidden handles this case with default header values.

Forbidden
*/
type PostAppsAppnameDiffForbidden struct {
}

func (o *PostAppsAppnameDiffForbidden) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/diff][%d] postAppsAppnameDiffForbidden ", 403)
}

func (o *PostAppsAppnameDiffForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAppsAppnameDiffNotFound creates a PostAppsAppnameDiffNotFound with default headers values
func NewPostAppsAppnameDiffNotFound() *PostAppsAppnameDiffNotFound {
	return &PostAppsAppnameDiffNotFound{}
}

/*PostAppsAppnameDiffNotFound handles this case with default header values.

Not found
*/
type PostAppsAppnameDiffNotFound struct {
}

func (o *PostAppsAppnameDiffNotFound) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/diff][%d] postAppsAppnameDiffNotFound ", 404)
}

func (o *PostAppsAppnameDiffNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
