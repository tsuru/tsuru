// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostSwapReader is a Reader for the PostSwap structure.
type PostSwapReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSwapReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostSwapOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostSwapBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostSwapUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostSwapNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostSwapConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewPostSwapPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSwapOK creates a PostSwapOK with default headers values
func NewPostSwapOK() *PostSwapOK {
	return &PostSwapOK{}
}

/*PostSwapOK handles this case with default header values.

Ok
*/
type PostSwapOK struct {
}

func (o *PostSwapOK) Error() string {
	return fmt.Sprintf("[POST /swap][%d] postSwapOK ", 200)
}

func (o *PostSwapOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSwapBadRequest creates a PostSwapBadRequest with default headers values
func NewPostSwapBadRequest() *PostSwapBadRequest {
	return &PostSwapBadRequest{}
}

/*PostSwapBadRequest handles this case with default header values.

Invalid data
*/
type PostSwapBadRequest struct {
}

func (o *PostSwapBadRequest) Error() string {
	return fmt.Sprintf("[POST /swap][%d] postSwapBadRequest ", 400)
}

func (o *PostSwapBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSwapUnauthorized creates a PostSwapUnauthorized with default headers values
func NewPostSwapUnauthorized() *PostSwapUnauthorized {
	return &PostSwapUnauthorized{}
}

/*PostSwapUnauthorized handles this case with default header values.

Unauthorized
*/
type PostSwapUnauthorized struct {
}

func (o *PostSwapUnauthorized) Error() string {
	return fmt.Sprintf("[POST /swap][%d] postSwapUnauthorized ", 401)
}

func (o *PostSwapUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSwapNotFound creates a PostSwapNotFound with default headers values
func NewPostSwapNotFound() *PostSwapNotFound {
	return &PostSwapNotFound{}
}

/*PostSwapNotFound handles this case with default header values.

App not found
*/
type PostSwapNotFound struct {
}

func (o *PostSwapNotFound) Error() string {
	return fmt.Sprintf("[POST /swap][%d] postSwapNotFound ", 404)
}

func (o *PostSwapNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSwapConflict creates a PostSwapConflict with default headers values
func NewPostSwapConflict() *PostSwapConflict {
	return &PostSwapConflict{}
}

/*PostSwapConflict handles this case with default header values.

App locked
*/
type PostSwapConflict struct {
}

func (o *PostSwapConflict) Error() string {
	return fmt.Sprintf("[POST /swap][%d] postSwapConflict ", 409)
}

func (o *PostSwapConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSwapPreconditionFailed creates a PostSwapPreconditionFailed with default headers values
func NewPostSwapPreconditionFailed() *PostSwapPreconditionFailed {
	return &PostSwapPreconditionFailed{}
}

/*PostSwapPreconditionFailed handles this case with default header values.

Number of units or platform don't match
*/
type PostSwapPreconditionFailed struct {
}

func (o *PostSwapPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /swap][%d] postSwapPreconditionFailed ", 412)
}

func (o *PostSwapPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
