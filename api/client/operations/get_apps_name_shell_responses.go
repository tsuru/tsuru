// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetAppsNameShellReader is a Reader for the GetAppsNameShell structure.
type GetAppsNameShellReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppsNameShellReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 101:
		result := NewGetAppsNameShellSwitchingProtocols()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAppsNameShellSwitchingProtocols creates a GetAppsNameShellSwitchingProtocols with default headers values
func NewGetAppsNameShellSwitchingProtocols() *GetAppsNameShellSwitchingProtocols {
	return &GetAppsNameShellSwitchingProtocols{}
}

/*GetAppsNameShellSwitchingProtocols handles this case with default header values.

Switch Protocol to websocket
*/
type GetAppsNameShellSwitchingProtocols struct {
}

func (o *GetAppsNameShellSwitchingProtocols) Error() string {
	return fmt.Sprintf("[GET /apps/{name}/shell][%d] getAppsNameShellSwitchingProtocols ", 101)
}

func (o *GetAppsNameShellSwitchingProtocols) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
