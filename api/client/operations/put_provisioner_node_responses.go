// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutProvisionerNodeReader is a Reader for the PutProvisionerNode structure.
type PutProvisionerNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProvisionerNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutProvisionerNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutProvisionerNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutProvisionerNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutProvisionerNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutProvisionerNodeOK creates a PutProvisionerNodeOK with default headers values
func NewPutProvisionerNodeOK() *PutProvisionerNodeOK {
	return &PutProvisionerNodeOK{}
}

/*PutProvisionerNodeOK handles this case with default header values.

Ok
*/
type PutProvisionerNodeOK struct {
}

func (o *PutProvisionerNodeOK) Error() string {
	return fmt.Sprintf("[PUT /{provisioner}/node][%d] putProvisionerNodeOK ", 200)
}

func (o *PutProvisionerNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProvisionerNodeBadRequest creates a PutProvisionerNodeBadRequest with default headers values
func NewPutProvisionerNodeBadRequest() *PutProvisionerNodeBadRequest {
	return &PutProvisionerNodeBadRequest{}
}

/*PutProvisionerNodeBadRequest handles this case with default header values.

Invalid data
*/
type PutProvisionerNodeBadRequest struct {
}

func (o *PutProvisionerNodeBadRequest) Error() string {
	return fmt.Sprintf("[PUT /{provisioner}/node][%d] putProvisionerNodeBadRequest ", 400)
}

func (o *PutProvisionerNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProvisionerNodeUnauthorized creates a PutProvisionerNodeUnauthorized with default headers values
func NewPutProvisionerNodeUnauthorized() *PutProvisionerNodeUnauthorized {
	return &PutProvisionerNodeUnauthorized{}
}

/*PutProvisionerNodeUnauthorized handles this case with default header values.

Unauthorized
*/
type PutProvisionerNodeUnauthorized struct {
}

func (o *PutProvisionerNodeUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /{provisioner}/node][%d] putProvisionerNodeUnauthorized ", 401)
}

func (o *PutProvisionerNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProvisionerNodeNotFound creates a PutProvisionerNodeNotFound with default headers values
func NewPutProvisionerNodeNotFound() *PutProvisionerNodeNotFound {
	return &PutProvisionerNodeNotFound{}
}

/*PutProvisionerNodeNotFound handles this case with default header values.

Not found
*/
type PutProvisionerNodeNotFound struct {
}

func (o *PutProvisionerNodeNotFound) Error() string {
	return fmt.Sprintf("[PUT /{provisioner}/node][%d] putProvisionerNodeNotFound ", 404)
}

func (o *PutProvisionerNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
