// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutAppsAppReader is a Reader for the PutAppsApp structure.
type PutAppsAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAppsAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAppsAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutAppsAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutAppsAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAppsAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAppsAppOK creates a PutAppsAppOK with default headers values
func NewPutAppsAppOK() *PutAppsAppOK {
	return &PutAppsAppOK{}
}

/*PutAppsAppOK handles this case with default header values.

App updated
*/
type PutAppsAppOK struct {
}

func (o *PutAppsAppOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppOK ", 200)
}

func (o *PutAppsAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppBadRequest creates a PutAppsAppBadRequest with default headers values
func NewPutAppsAppBadRequest() *PutAppsAppBadRequest {
	return &PutAppsAppBadRequest{}
}

/*PutAppsAppBadRequest handles this case with default header values.

Invalid new pool
*/
type PutAppsAppBadRequest struct {
}

func (o *PutAppsAppBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppBadRequest ", 400)
}

func (o *PutAppsAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppUnauthorized creates a PutAppsAppUnauthorized with default headers values
func NewPutAppsAppUnauthorized() *PutAppsAppUnauthorized {
	return &PutAppsAppUnauthorized{}
}

/*PutAppsAppUnauthorized handles this case with default header values.

Unauthorized
*/
type PutAppsAppUnauthorized struct {
}

func (o *PutAppsAppUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppUnauthorized ", 401)
}

func (o *PutAppsAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppNotFound creates a PutAppsAppNotFound with default headers values
func NewPutAppsAppNotFound() *PutAppsAppNotFound {
	return &PutAppsAppNotFound{}
}

/*PutAppsAppNotFound handles this case with default header values.

Not found
*/
type PutAppsAppNotFound struct {
}

func (o *PutAppsAppNotFound) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppNotFound ", 404)
}

func (o *PutAppsAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
