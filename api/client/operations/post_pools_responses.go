// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostPoolsReader is a Reader for the PostPools structure.
type PostPoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostPoolsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPoolsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPoolsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostPoolsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPoolsCreated creates a PostPoolsCreated with default headers values
func NewPostPoolsCreated() *PostPoolsCreated {
	return &PostPoolsCreated{}
}

/*PostPoolsCreated handles this case with default header values.

Pool created
*/
type PostPoolsCreated struct {
}

func (o *PostPoolsCreated) Error() string {
	return fmt.Sprintf("[POST /pools][%d] postPoolsCreated ", 201)
}

func (o *PostPoolsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsBadRequest creates a PostPoolsBadRequest with default headers values
func NewPostPoolsBadRequest() *PostPoolsBadRequest {
	return &PostPoolsBadRequest{}
}

/*PostPoolsBadRequest handles this case with default header values.

Invalid data
*/
type PostPoolsBadRequest struct {
}

func (o *PostPoolsBadRequest) Error() string {
	return fmt.Sprintf("[POST /pools][%d] postPoolsBadRequest ", 400)
}

func (o *PostPoolsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsUnauthorized creates a PostPoolsUnauthorized with default headers values
func NewPostPoolsUnauthorized() *PostPoolsUnauthorized {
	return &PostPoolsUnauthorized{}
}

/*PostPoolsUnauthorized handles this case with default header values.

Unauthorized
*/
type PostPoolsUnauthorized struct {
}

func (o *PostPoolsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pools][%d] postPoolsUnauthorized ", 401)
}

func (o *PostPoolsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsConflict creates a PostPoolsConflict with default headers values
func NewPostPoolsConflict() *PostPoolsConflict {
	return &PostPoolsConflict{}
}

/*PostPoolsConflict handles this case with default header values.

Pool already exists
*/
type PostPoolsConflict struct {
}

func (o *PostPoolsConflict) Error() string {
	return fmt.Sprintf("[POST /pools][%d] postPoolsConflict ", 409)
}

func (o *PostPoolsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
