// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutAppsAppnameQuotaReader is a Reader for the PutAppsAppnameQuota structure.
type PutAppsAppnameQuotaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAppsAppnameQuotaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAppsAppnameQuotaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutAppsAppnameQuotaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutAppsAppnameQuotaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAppsAppnameQuotaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAppsAppnameQuotaOK creates a PutAppsAppnameQuotaOK with default headers values
func NewPutAppsAppnameQuotaOK() *PutAppsAppnameQuotaOK {
	return &PutAppsAppnameQuotaOK{}
}

/*PutAppsAppnameQuotaOK handles this case with default header values.

Quota updated
*/
type PutAppsAppnameQuotaOK struct {
}

func (o *PutAppsAppnameQuotaOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appname}/quota][%d] putAppsAppnameQuotaOK ", 200)
}

func (o *PutAppsAppnameQuotaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppnameQuotaBadRequest creates a PutAppsAppnameQuotaBadRequest with default headers values
func NewPutAppsAppnameQuotaBadRequest() *PutAppsAppnameQuotaBadRequest {
	return &PutAppsAppnameQuotaBadRequest{}
}

/*PutAppsAppnameQuotaBadRequest handles this case with default header values.

Invalid data
*/
type PutAppsAppnameQuotaBadRequest struct {
}

func (o *PutAppsAppnameQuotaBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appname}/quota][%d] putAppsAppnameQuotaBadRequest ", 400)
}

func (o *PutAppsAppnameQuotaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppnameQuotaUnauthorized creates a PutAppsAppnameQuotaUnauthorized with default headers values
func NewPutAppsAppnameQuotaUnauthorized() *PutAppsAppnameQuotaUnauthorized {
	return &PutAppsAppnameQuotaUnauthorized{}
}

/*PutAppsAppnameQuotaUnauthorized handles this case with default header values.

Unauthorized
*/
type PutAppsAppnameQuotaUnauthorized struct {
}

func (o *PutAppsAppnameQuotaUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appname}/quota][%d] putAppsAppnameQuotaUnauthorized ", 401)
}

func (o *PutAppsAppnameQuotaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAppsAppnameQuotaNotFound creates a PutAppsAppnameQuotaNotFound with default headers values
func NewPutAppsAppnameQuotaNotFound() *PutAppsAppnameQuotaNotFound {
	return &PutAppsAppnameQuotaNotFound{}
}

/*PutAppsAppnameQuotaNotFound handles this case with default header values.

Application not found
*/
type PutAppsAppnameQuotaNotFound struct {
}

func (o *PutAppsAppnameQuotaNotFound) Error() string {
	return fmt.Sprintf("[PUT /apps/{appname}/quota][%d] putAppsAppnameQuotaNotFound ", 404)
}

func (o *PutAppsAppnameQuotaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
