// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeletePlatformsPlatformParams creates a new DeletePlatformsPlatformParams object
// with the default values initialized.
func NewDeletePlatformsPlatformParams() *DeletePlatformsPlatformParams {
	var ()
	return &DeletePlatformsPlatformParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeletePlatformsPlatformParamsWithTimeout creates a new DeletePlatformsPlatformParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeletePlatformsPlatformParamsWithTimeout(timeout time.Duration) *DeletePlatformsPlatformParams {
	var ()
	return &DeletePlatformsPlatformParams{

		timeout: timeout,
	}
}

// NewDeletePlatformsPlatformParamsWithContext creates a new DeletePlatformsPlatformParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeletePlatformsPlatformParamsWithContext(ctx context.Context) *DeletePlatformsPlatformParams {
	var ()
	return &DeletePlatformsPlatformParams{

		Context: ctx,
	}
}

// NewDeletePlatformsPlatformParamsWithHTTPClient creates a new DeletePlatformsPlatformParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeletePlatformsPlatformParamsWithHTTPClient(client *http.Client) *DeletePlatformsPlatformParams {
	var ()
	return &DeletePlatformsPlatformParams{
		HTTPClient: client,
	}
}

/*DeletePlatformsPlatformParams contains all the parameters to send to the API endpoint
for the delete platforms platform operation typically these are written to a http.Request
*/
type DeletePlatformsPlatformParams struct {

	/*Platform
	  Platform name.

	*/
	Platform string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) WithTimeout(timeout time.Duration) *DeletePlatformsPlatformParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) WithContext(ctx context.Context) *DeletePlatformsPlatformParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) WithHTTPClient(client *http.Client) *DeletePlatformsPlatformParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPlatform adds the platform to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) WithPlatform(platform string) *DeletePlatformsPlatformParams {
	o.SetPlatform(platform)
	return o
}

// SetPlatform adds the platform to the delete platforms platform params
func (o *DeletePlatformsPlatformParams) SetPlatform(platform string) {
	o.Platform = platform
}

// WriteToRequest writes these params to a swagger request
func (o *DeletePlatformsPlatformParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param platform
	if err := r.SetPathParam("platform", o.Platform); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
