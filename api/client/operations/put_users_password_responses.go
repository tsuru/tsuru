// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutUsersPasswordReader is a Reader for the PutUsersPassword structure.
type PutUsersPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUsersPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutUsersPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutUsersPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutUsersPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutUsersPasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutUsersPasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUsersPasswordOK creates a PutUsersPasswordOK with default headers values
func NewPutUsersPasswordOK() *PutUsersPasswordOK {
	return &PutUsersPasswordOK{}
}

/*PutUsersPasswordOK handles this case with default header values.

Ok
*/
type PutUsersPasswordOK struct {
}

func (o *PutUsersPasswordOK) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] putUsersPasswordOK ", 200)
}

func (o *PutUsersPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersPasswordBadRequest creates a PutUsersPasswordBadRequest with default headers values
func NewPutUsersPasswordBadRequest() *PutUsersPasswordBadRequest {
	return &PutUsersPasswordBadRequest{}
}

/*PutUsersPasswordBadRequest handles this case with default header values.

Invalid data
*/
type PutUsersPasswordBadRequest struct {
}

func (o *PutUsersPasswordBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] putUsersPasswordBadRequest ", 400)
}

func (o *PutUsersPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersPasswordUnauthorized creates a PutUsersPasswordUnauthorized with default headers values
func NewPutUsersPasswordUnauthorized() *PutUsersPasswordUnauthorized {
	return &PutUsersPasswordUnauthorized{}
}

/*PutUsersPasswordUnauthorized handles this case with default header values.

Unauthorized
*/
type PutUsersPasswordUnauthorized struct {
}

func (o *PutUsersPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] putUsersPasswordUnauthorized ", 401)
}

func (o *PutUsersPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersPasswordForbidden creates a PutUsersPasswordForbidden with default headers values
func NewPutUsersPasswordForbidden() *PutUsersPasswordForbidden {
	return &PutUsersPasswordForbidden{}
}

/*PutUsersPasswordForbidden handles this case with default header values.

Forbidden
*/
type PutUsersPasswordForbidden struct {
}

func (o *PutUsersPasswordForbidden) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] putUsersPasswordForbidden ", 403)
}

func (o *PutUsersPasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUsersPasswordNotFound creates a PutUsersPasswordNotFound with default headers values
func NewPutUsersPasswordNotFound() *PutUsersPasswordNotFound {
	return &PutUsersPasswordNotFound{}
}

/*PutUsersPasswordNotFound handles this case with default header values.

Not found
*/
type PutUsersPasswordNotFound struct {
}

func (o *PutUsersPasswordNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] putUsersPasswordNotFound ", 404)
}

func (o *PutUsersPasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
