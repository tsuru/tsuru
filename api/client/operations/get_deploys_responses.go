// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetDeploysReader is a Reader for the GetDeploys structure.
type GetDeploysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeploysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetDeploysNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeploysOK creates a GetDeploysOK with default headers values
func NewGetDeploysOK() *GetDeploysOK {
	return &GetDeploysOK{}
}

/*GetDeploysOK handles this case with default header values.

OK
*/
type GetDeploysOK struct {
}

func (o *GetDeploysOK) Error() string {
	return fmt.Sprintf("[GET /deploys][%d] getDeploysOK ", 200)
}

func (o *GetDeploysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploysNoContent creates a GetDeploysNoContent with default headers values
func NewGetDeploysNoContent() *GetDeploysNoContent {
	return &GetDeploysNoContent{}
}

/*GetDeploysNoContent handles this case with default header values.

No content
*/
type GetDeploysNoContent struct {
}

func (o *GetDeploysNoContent) Error() string {
	return fmt.Sprintf("[GET /deploys][%d] getDeploysNoContent ", 204)
}

func (o *GetDeploysNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
