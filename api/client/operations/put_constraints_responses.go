// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutConstraintsReader is a Reader for the PutConstraints structure.
type PutConstraintsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConstraintsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutConstraintsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutConstraintsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutConstraintsOK creates a PutConstraintsOK with default headers values
func NewPutConstraintsOK() *PutConstraintsOK {
	return &PutConstraintsOK{}
}

/*PutConstraintsOK handles this case with default header values.

OK
*/
type PutConstraintsOK struct {
}

func (o *PutConstraintsOK) Error() string {
	return fmt.Sprintf("[PUT /constraints][%d] putConstraintsOK ", 200)
}

func (o *PutConstraintsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutConstraintsUnauthorized creates a PutConstraintsUnauthorized with default headers values
func NewPutConstraintsUnauthorized() *PutConstraintsUnauthorized {
	return &PutConstraintsUnauthorized{}
}

/*PutConstraintsUnauthorized handles this case with default header values.

Unauthorized
*/
type PutConstraintsUnauthorized struct {
}

func (o *PutConstraintsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /constraints][%d] putConstraintsUnauthorized ", 401)
}

func (o *PutConstraintsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
