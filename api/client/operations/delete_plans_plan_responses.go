// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeletePlansPlanReader is a Reader for the DeletePlansPlan structure.
type DeletePlansPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePlansPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePlansPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePlansPlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePlansPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePlansPlanOK creates a DeletePlansPlanOK with default headers values
func NewDeletePlansPlanOK() *DeletePlansPlanOK {
	return &DeletePlansPlanOK{}
}

/*DeletePlansPlanOK handles this case with default header values.

Plan removed
*/
type DeletePlansPlanOK struct {
}

func (o *DeletePlansPlanOK) Error() string {
	return fmt.Sprintf("[DELETE /plans/{plan}][%d] deletePlansPlanOK ", 200)
}

func (o *DeletePlansPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlansPlanUnauthorized creates a DeletePlansPlanUnauthorized with default headers values
func NewDeletePlansPlanUnauthorized() *DeletePlansPlanUnauthorized {
	return &DeletePlansPlanUnauthorized{}
}

/*DeletePlansPlanUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePlansPlanUnauthorized struct {
}

func (o *DeletePlansPlanUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /plans/{plan}][%d] deletePlansPlanUnauthorized ", 401)
}

func (o *DeletePlansPlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlansPlanNotFound creates a DeletePlansPlanNotFound with default headers values
func NewDeletePlansPlanNotFound() *DeletePlansPlanNotFound {
	return &DeletePlansPlanNotFound{}
}

/*DeletePlansPlanNotFound handles this case with default header values.

Plan not found
*/
type DeletePlansPlanNotFound struct {
}

func (o *DeletePlansPlanNotFound) Error() string {
	return fmt.Sprintf("[DELETE /plans/{plan}][%d] deletePlansPlanNotFound ", 404)
}

func (o *DeletePlansPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
