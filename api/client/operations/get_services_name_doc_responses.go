// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetServicesNameDocReader is a Reader for the GetServicesNameDoc structure.
type GetServicesNameDocReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicesNameDocReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServicesNameDocOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetServicesNameDocUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetServicesNameDocNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicesNameDocOK creates a GetServicesNameDocOK with default headers values
func NewGetServicesNameDocOK() *GetServicesNameDocOK {
	return &GetServicesNameDocOK{}
}

/*GetServicesNameDocOK handles this case with default header values.

OK
*/
type GetServicesNameDocOK struct {
}

func (o *GetServicesNameDocOK) Error() string {
	return fmt.Sprintf("[GET /services/{name}/doc][%d] getServicesNameDocOK ", 200)
}

func (o *GetServicesNameDocOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesNameDocUnauthorized creates a GetServicesNameDocUnauthorized with default headers values
func NewGetServicesNameDocUnauthorized() *GetServicesNameDocUnauthorized {
	return &GetServicesNameDocUnauthorized{}
}

/*GetServicesNameDocUnauthorized handles this case with default header values.

Unauthorized
*/
type GetServicesNameDocUnauthorized struct {
}

func (o *GetServicesNameDocUnauthorized) Error() string {
	return fmt.Sprintf("[GET /services/{name}/doc][%d] getServicesNameDocUnauthorized ", 401)
}

func (o *GetServicesNameDocUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesNameDocNotFound creates a GetServicesNameDocNotFound with default headers values
func NewGetServicesNameDocNotFound() *GetServicesNameDocNotFound {
	return &GetServicesNameDocNotFound{}
}

/*GetServicesNameDocNotFound handles this case with default header values.

Not found
*/
type GetServicesNameDocNotFound struct {
}

func (o *GetServicesNameDocNotFound) Error() string {
	return fmt.Sprintf("[GET /services/{name}/doc][%d] getServicesNameDocNotFound ", 404)
}

func (o *GetServicesNameDocNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
