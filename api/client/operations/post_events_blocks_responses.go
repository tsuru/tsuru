// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostEventsBlocksReader is a Reader for the PostEventsBlocks structure.
type PostEventsBlocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEventsBlocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostEventsBlocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostEventsBlocksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostEventsBlocksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostEventsBlocksOK creates a PostEventsBlocksOK with default headers values
func NewPostEventsBlocksOK() *PostEventsBlocksOK {
	return &PostEventsBlocksOK{}
}

/*PostEventsBlocksOK handles this case with default header values.

OK
*/
type PostEventsBlocksOK struct {
}

func (o *PostEventsBlocksOK) Error() string {
	return fmt.Sprintf("[POST /events/blocks][%d] postEventsBlocksOK ", 200)
}

func (o *PostEventsBlocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEventsBlocksBadRequest creates a PostEventsBlocksBadRequest with default headers values
func NewPostEventsBlocksBadRequest() *PostEventsBlocksBadRequest {
	return &PostEventsBlocksBadRequest{}
}

/*PostEventsBlocksBadRequest handles this case with default header values.

Invalid data or empty reason
*/
type PostEventsBlocksBadRequest struct {
}

func (o *PostEventsBlocksBadRequest) Error() string {
	return fmt.Sprintf("[POST /events/blocks][%d] postEventsBlocksBadRequest ", 400)
}

func (o *PostEventsBlocksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEventsBlocksUnauthorized creates a PostEventsBlocksUnauthorized with default headers values
func NewPostEventsBlocksUnauthorized() *PostEventsBlocksUnauthorized {
	return &PostEventsBlocksUnauthorized{}
}

/*PostEventsBlocksUnauthorized handles this case with default header values.

Unauthorized
*/
type PostEventsBlocksUnauthorized struct {
}

func (o *PostEventsBlocksUnauthorized) Error() string {
	return fmt.Sprintf("[POST /events/blocks][%d] postEventsBlocksUnauthorized ", 401)
}

func (o *PostEventsBlocksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
