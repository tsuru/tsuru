// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteVolumesNameReader is a Reader for the DeleteVolumesName structure.
type DeleteVolumesNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVolumesNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteVolumesNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteVolumesNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteVolumesNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteVolumesNameOK creates a DeleteVolumesNameOK with default headers values
func NewDeleteVolumesNameOK() *DeleteVolumesNameOK {
	return &DeleteVolumesNameOK{}
}

/*DeleteVolumesNameOK handles this case with default header values.

Volume deleted
*/
type DeleteVolumesNameOK struct {
}

func (o *DeleteVolumesNameOK) Error() string {
	return fmt.Sprintf("[DELETE /volumes/{name}][%d] deleteVolumesNameOK ", 200)
}

func (o *DeleteVolumesNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVolumesNameUnauthorized creates a DeleteVolumesNameUnauthorized with default headers values
func NewDeleteVolumesNameUnauthorized() *DeleteVolumesNameUnauthorized {
	return &DeleteVolumesNameUnauthorized{}
}

/*DeleteVolumesNameUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteVolumesNameUnauthorized struct {
}

func (o *DeleteVolumesNameUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /volumes/{name}][%d] deleteVolumesNameUnauthorized ", 401)
}

func (o *DeleteVolumesNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVolumesNameNotFound creates a DeleteVolumesNameNotFound with default headers values
func NewDeleteVolumesNameNotFound() *DeleteVolumesNameNotFound {
	return &DeleteVolumesNameNotFound{}
}

/*DeleteVolumesNameNotFound handles this case with default header values.

Volume not found
*/
type DeleteVolumesNameNotFound struct {
}

func (o *DeleteVolumesNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /volumes/{name}][%d] deleteVolumesNameNotFound ", 404)
}

func (o *DeleteVolumesNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
