// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteRolesNameUserEmailReader is a Reader for the DeleteRolesNameUserEmail structure.
type DeleteRolesNameUserEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRolesNameUserEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteRolesNameUserEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteRolesNameUserEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteRolesNameUserEmailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteRolesNameUserEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteRolesNameUserEmailOK creates a DeleteRolesNameUserEmailOK with default headers values
func NewDeleteRolesNameUserEmailOK() *DeleteRolesNameUserEmailOK {
	return &DeleteRolesNameUserEmailOK{}
}

/*DeleteRolesNameUserEmailOK handles this case with default header values.

Ok
*/
type DeleteRolesNameUserEmailOK struct {
}

func (o *DeleteRolesNameUserEmailOK) Error() string {
	return fmt.Sprintf("[DELETE /roles/{name}/user/{email}][%d] deleteRolesNameUserEmailOK ", 200)
}

func (o *DeleteRolesNameUserEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRolesNameUserEmailBadRequest creates a DeleteRolesNameUserEmailBadRequest with default headers values
func NewDeleteRolesNameUserEmailBadRequest() *DeleteRolesNameUserEmailBadRequest {
	return &DeleteRolesNameUserEmailBadRequest{}
}

/*DeleteRolesNameUserEmailBadRequest handles this case with default header values.

Invalid data
*/
type DeleteRolesNameUserEmailBadRequest struct {
}

func (o *DeleteRolesNameUserEmailBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /roles/{name}/user/{email}][%d] deleteRolesNameUserEmailBadRequest ", 400)
}

func (o *DeleteRolesNameUserEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRolesNameUserEmailUnauthorized creates a DeleteRolesNameUserEmailUnauthorized with default headers values
func NewDeleteRolesNameUserEmailUnauthorized() *DeleteRolesNameUserEmailUnauthorized {
	return &DeleteRolesNameUserEmailUnauthorized{}
}

/*DeleteRolesNameUserEmailUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteRolesNameUserEmailUnauthorized struct {
}

func (o *DeleteRolesNameUserEmailUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /roles/{name}/user/{email}][%d] deleteRolesNameUserEmailUnauthorized ", 401)
}

func (o *DeleteRolesNameUserEmailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRolesNameUserEmailNotFound creates a DeleteRolesNameUserEmailNotFound with default headers values
func NewDeleteRolesNameUserEmailNotFound() *DeleteRolesNameUserEmailNotFound {
	return &DeleteRolesNameUserEmailNotFound{}
}

/*DeleteRolesNameUserEmailNotFound handles this case with default header values.

Role not found
*/
type DeleteRolesNameUserEmailNotFound struct {
}

func (o *DeleteRolesNameUserEmailNotFound) Error() string {
	return fmt.Sprintf("[DELETE /roles/{name}/user/{email}][%d] deleteRolesNameUserEmailNotFound ", 404)
}

func (o *DeleteRolesNameUserEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
