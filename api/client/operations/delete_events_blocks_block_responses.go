// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteEventsBlocksBlockReader is a Reader for the DeleteEventsBlocksBlock structure.
type DeleteEventsBlocksBlockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEventsBlocksBlockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteEventsBlocksBlockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteEventsBlocksBlockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteEventsBlocksBlockUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteEventsBlocksBlockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteEventsBlocksBlockOK creates a DeleteEventsBlocksBlockOK with default headers values
func NewDeleteEventsBlocksBlockOK() *DeleteEventsBlocksBlockOK {
	return &DeleteEventsBlocksBlockOK{}
}

/*DeleteEventsBlocksBlockOK handles this case with default header values.

OK
*/
type DeleteEventsBlocksBlockOK struct {
}

func (o *DeleteEventsBlocksBlockOK) Error() string {
	return fmt.Sprintf("[DELETE /events/blocks/{block}][%d] deleteEventsBlocksBlockOK ", 200)
}

func (o *DeleteEventsBlocksBlockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventsBlocksBlockBadRequest creates a DeleteEventsBlocksBlockBadRequest with default headers values
func NewDeleteEventsBlocksBlockBadRequest() *DeleteEventsBlocksBlockBadRequest {
	return &DeleteEventsBlocksBlockBadRequest{}
}

/*DeleteEventsBlocksBlockBadRequest handles this case with default header values.

Invalid uuid
*/
type DeleteEventsBlocksBlockBadRequest struct {
}

func (o *DeleteEventsBlocksBlockBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /events/blocks/{block}][%d] deleteEventsBlocksBlockBadRequest ", 400)
}

func (o *DeleteEventsBlocksBlockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventsBlocksBlockUnauthorized creates a DeleteEventsBlocksBlockUnauthorized with default headers values
func NewDeleteEventsBlocksBlockUnauthorized() *DeleteEventsBlocksBlockUnauthorized {
	return &DeleteEventsBlocksBlockUnauthorized{}
}

/*DeleteEventsBlocksBlockUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteEventsBlocksBlockUnauthorized struct {
}

func (o *DeleteEventsBlocksBlockUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /events/blocks/{block}][%d] deleteEventsBlocksBlockUnauthorized ", 401)
}

func (o *DeleteEventsBlocksBlockUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventsBlocksBlockNotFound creates a DeleteEventsBlocksBlockNotFound with default headers values
func NewDeleteEventsBlocksBlockNotFound() *DeleteEventsBlocksBlockNotFound {
	return &DeleteEventsBlocksBlockNotFound{}
}

/*DeleteEventsBlocksBlockNotFound handles this case with default header values.

Active block with provided uuid not found
*/
type DeleteEventsBlocksBlockNotFound struct {
}

func (o *DeleteEventsBlocksBlockNotFound) Error() string {
	return fmt.Sprintf("[DELETE /events/blocks/{block}][%d] deleteEventsBlocksBlockNotFound ", 404)
}

func (o *DeleteEventsBlocksBlockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
