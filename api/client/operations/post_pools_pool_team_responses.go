// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostPoolsPoolTeamReader is a Reader for the PostPoolsPoolTeam structure.
type PostPoolsPoolTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPoolsPoolTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPoolsPoolTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPoolsPoolTeamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPoolsPoolTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostPoolsPoolTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPoolsPoolTeamOK creates a PostPoolsPoolTeamOK with default headers values
func NewPostPoolsPoolTeamOK() *PostPoolsPoolTeamOK {
	return &PostPoolsPoolTeamOK{}
}

/*PostPoolsPoolTeamOK handles this case with default header values.

Pool updated
*/
type PostPoolsPoolTeamOK struct {
}

func (o *PostPoolsPoolTeamOK) Error() string {
	return fmt.Sprintf("[POST /pools/{pool}/team][%d] postPoolsPoolTeamOK ", 200)
}

func (o *PostPoolsPoolTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsPoolTeamBadRequest creates a PostPoolsPoolTeamBadRequest with default headers values
func NewPostPoolsPoolTeamBadRequest() *PostPoolsPoolTeamBadRequest {
	return &PostPoolsPoolTeamBadRequest{}
}

/*PostPoolsPoolTeamBadRequest handles this case with default header values.

Invalid data
*/
type PostPoolsPoolTeamBadRequest struct {
}

func (o *PostPoolsPoolTeamBadRequest) Error() string {
	return fmt.Sprintf("[POST /pools/{pool}/team][%d] postPoolsPoolTeamBadRequest ", 400)
}

func (o *PostPoolsPoolTeamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsPoolTeamUnauthorized creates a PostPoolsPoolTeamUnauthorized with default headers values
func NewPostPoolsPoolTeamUnauthorized() *PostPoolsPoolTeamUnauthorized {
	return &PostPoolsPoolTeamUnauthorized{}
}

/*PostPoolsPoolTeamUnauthorized handles this case with default header values.

Unauthorized
*/
type PostPoolsPoolTeamUnauthorized struct {
}

func (o *PostPoolsPoolTeamUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pools/{pool}/team][%d] postPoolsPoolTeamUnauthorized ", 401)
}

func (o *PostPoolsPoolTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsPoolTeamNotFound creates a PostPoolsPoolTeamNotFound with default headers values
func NewPostPoolsPoolTeamNotFound() *PostPoolsPoolTeamNotFound {
	return &PostPoolsPoolTeamNotFound{}
}

/*PostPoolsPoolTeamNotFound handles this case with default header values.

Pool not found
*/
type PostPoolsPoolTeamNotFound struct {
}

func (o *PostPoolsPoolTeamNotFound) Error() string {
	return fmt.Sprintf("[POST /pools/{pool}/team][%d] postPoolsPoolTeamNotFound ", 404)
}

func (o *PostPoolsPoolTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
