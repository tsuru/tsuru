// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostEventsUUIDCancelReader is a Reader for the PostEventsUUIDCancel structure.
type PostEventsUUIDCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEventsUUIDCancelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostEventsUUIDCancelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostEventsUUIDCancelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostEventsUUIDCancelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostEventsUUIDCancelOK creates a PostEventsUUIDCancelOK with default headers values
func NewPostEventsUUIDCancelOK() *PostEventsUUIDCancelOK {
	return &PostEventsUUIDCancelOK{}
}

/*PostEventsUUIDCancelOK handles this case with default header values.

OK
*/
type PostEventsUUIDCancelOK struct {
}

func (o *PostEventsUUIDCancelOK) Error() string {
	return fmt.Sprintf("[POST /events/{uuid}/cancel][%d] postEventsUuidCancelOK ", 200)
}

func (o *PostEventsUUIDCancelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEventsUUIDCancelBadRequest creates a PostEventsUUIDCancelBadRequest with default headers values
func NewPostEventsUUIDCancelBadRequest() *PostEventsUUIDCancelBadRequest {
	return &PostEventsUUIDCancelBadRequest{}
}

/*PostEventsUUIDCancelBadRequest handles this case with default header values.

Invalid uuid or empty reason
*/
type PostEventsUUIDCancelBadRequest struct {
}

func (o *PostEventsUUIDCancelBadRequest) Error() string {
	return fmt.Sprintf("[POST /events/{uuid}/cancel][%d] postEventsUuidCancelBadRequest ", 400)
}

func (o *PostEventsUUIDCancelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEventsUUIDCancelNotFound creates a PostEventsUUIDCancelNotFound with default headers values
func NewPostEventsUUIDCancelNotFound() *PostEventsUUIDCancelNotFound {
	return &PostEventsUUIDCancelNotFound{}
}

/*PostEventsUUIDCancelNotFound handles this case with default header values.

Not found
*/
type PostEventsUUIDCancelNotFound struct {
}

func (o *PostEventsUUIDCancelNotFound) Error() string {
	return fmt.Sprintf("[POST /events/{uuid}/cancel][%d] postEventsUuidCancelNotFound ", 404)
}

func (o *PostEventsUUIDCancelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
