// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostAppsAppnameDeployReader is a Reader for the PostAppsAppnameDeploy structure.
type PostAppsAppnameDeployReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAppsAppnameDeployReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostAppsAppnameDeployOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAppsAppnameDeployBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostAppsAppnameDeployForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostAppsAppnameDeployNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAppsAppnameDeployOK creates a PostAppsAppnameDeployOK with default headers values
func NewPostAppsAppnameDeployOK() *PostAppsAppnameDeployOK {
	return &PostAppsAppnameDeployOK{}
}

/*PostAppsAppnameDeployOK handles this case with default header values.

OK
*/
type PostAppsAppnameDeployOK struct {
}

func (o *PostAppsAppnameDeployOK) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/deploy][%d] postAppsAppnameDeployOK ", 200)
}

func (o *PostAppsAppnameDeployOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAppsAppnameDeployBadRequest creates a PostAppsAppnameDeployBadRequest with default headers values
func NewPostAppsAppnameDeployBadRequest() *PostAppsAppnameDeployBadRequest {
	return &PostAppsAppnameDeployBadRequest{}
}

/*PostAppsAppnameDeployBadRequest handles this case with default header values.

Invalid data
*/
type PostAppsAppnameDeployBadRequest struct {
}

func (o *PostAppsAppnameDeployBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/deploy][%d] postAppsAppnameDeployBadRequest ", 400)
}

func (o *PostAppsAppnameDeployBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAppsAppnameDeployForbidden creates a PostAppsAppnameDeployForbidden with default headers values
func NewPostAppsAppnameDeployForbidden() *PostAppsAppnameDeployForbidden {
	return &PostAppsAppnameDeployForbidden{}
}

/*PostAppsAppnameDeployForbidden handles this case with default header values.

Forbidden
*/
type PostAppsAppnameDeployForbidden struct {
}

func (o *PostAppsAppnameDeployForbidden) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/deploy][%d] postAppsAppnameDeployForbidden ", 403)
}

func (o *PostAppsAppnameDeployForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAppsAppnameDeployNotFound creates a PostAppsAppnameDeployNotFound with default headers values
func NewPostAppsAppnameDeployNotFound() *PostAppsAppnameDeployNotFound {
	return &PostAppsAppnameDeployNotFound{}
}

/*PostAppsAppnameDeployNotFound handles this case with default header values.

Not found
*/
type PostAppsAppnameDeployNotFound struct {
}

func (o *PostAppsAppnameDeployNotFound) Error() string {
	return fmt.Sprintf("[POST /apps/{appname}/deploy][%d] postAppsAppnameDeployNotFound ", 404)
}

func (o *PostAppsAppnameDeployNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
