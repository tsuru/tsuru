// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeletePlatformsNameReader is a Reader for the DeletePlatformsName structure.
type DeletePlatformsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePlatformsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePlatformsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePlatformsNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePlatformsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePlatformsNameOK creates a DeletePlatformsNameOK with default headers values
func NewDeletePlatformsNameOK() *DeletePlatformsNameOK {
	return &DeletePlatformsNameOK{}
}

/*DeletePlatformsNameOK handles this case with default header values.

Platform removed
*/
type DeletePlatformsNameOK struct {
}

func (o *DeletePlatformsNameOK) Error() string {
	return fmt.Sprintf("[DELETE /platforms/{name}][%d] deletePlatformsNameOK ", 200)
}

func (o *DeletePlatformsNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlatformsNameUnauthorized creates a DeletePlatformsNameUnauthorized with default headers values
func NewDeletePlatformsNameUnauthorized() *DeletePlatformsNameUnauthorized {
	return &DeletePlatformsNameUnauthorized{}
}

/*DeletePlatformsNameUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePlatformsNameUnauthorized struct {
}

func (o *DeletePlatformsNameUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /platforms/{name}][%d] deletePlatformsNameUnauthorized ", 401)
}

func (o *DeletePlatformsNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlatformsNameNotFound creates a DeletePlatformsNameNotFound with default headers values
func NewDeletePlatformsNameNotFound() *DeletePlatformsNameNotFound {
	return &DeletePlatformsNameNotFound{}
}

/*DeletePlatformsNameNotFound handles this case with default header values.

Not found
*/
type DeletePlatformsNameNotFound struct {
}

func (o *DeletePlatformsNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /platforms/{name}][%d] deletePlatformsNameNotFound ", 404)
}

func (o *DeletePlatformsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
