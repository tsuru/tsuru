// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteHealingNodeReader is a Reader for the DeleteHealingNode structure.
type DeleteHealingNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteHealingNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteHealingNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteHealingNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteHealingNodeOK creates a DeleteHealingNodeOK with default headers values
func NewDeleteHealingNodeOK() *DeleteHealingNodeOK {
	return &DeleteHealingNodeOK{}
}

/*DeleteHealingNodeOK handles this case with default header values.

Ok
*/
type DeleteHealingNodeOK struct {
}

func (o *DeleteHealingNodeOK) Error() string {
	return fmt.Sprintf("[DELETE /healing/node][%d] deleteHealingNodeOK ", 200)
}

func (o *DeleteHealingNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteHealingNodeUnauthorized creates a DeleteHealingNodeUnauthorized with default headers values
func NewDeleteHealingNodeUnauthorized() *DeleteHealingNodeUnauthorized {
	return &DeleteHealingNodeUnauthorized{}
}

/*DeleteHealingNodeUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteHealingNodeUnauthorized struct {
}

func (o *DeleteHealingNodeUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /healing/node][%d] deleteHealingNodeUnauthorized ", 401)
}

func (o *DeleteHealingNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
