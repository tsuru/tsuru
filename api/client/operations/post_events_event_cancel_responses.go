// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostEventsEventCancelReader is a Reader for the PostEventsEventCancel structure.
type PostEventsEventCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEventsEventCancelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostEventsEventCancelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostEventsEventCancelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostEventsEventCancelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostEventsEventCancelOK creates a PostEventsEventCancelOK with default headers values
func NewPostEventsEventCancelOK() *PostEventsEventCancelOK {
	return &PostEventsEventCancelOK{}
}

/*PostEventsEventCancelOK handles this case with default header values.

OK
*/
type PostEventsEventCancelOK struct {
}

func (o *PostEventsEventCancelOK) Error() string {
	return fmt.Sprintf("[POST /events/{event}/cancel][%d] postEventsEventCancelOK ", 200)
}

func (o *PostEventsEventCancelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEventsEventCancelBadRequest creates a PostEventsEventCancelBadRequest with default headers values
func NewPostEventsEventCancelBadRequest() *PostEventsEventCancelBadRequest {
	return &PostEventsEventCancelBadRequest{}
}

/*PostEventsEventCancelBadRequest handles this case with default header values.

Invalid uuid or empty reason
*/
type PostEventsEventCancelBadRequest struct {
}

func (o *PostEventsEventCancelBadRequest) Error() string {
	return fmt.Sprintf("[POST /events/{event}/cancel][%d] postEventsEventCancelBadRequest ", 400)
}

func (o *PostEventsEventCancelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEventsEventCancelNotFound creates a PostEventsEventCancelNotFound with default headers values
func NewPostEventsEventCancelNotFound() *PostEventsEventCancelNotFound {
	return &PostEventsEventCancelNotFound{}
}

/*PostEventsEventCancelNotFound handles this case with default header values.

Not found
*/
type PostEventsEventCancelNotFound struct {
}

func (o *PostEventsEventCancelNotFound) Error() string {
	return fmt.Sprintf("[POST /events/{event}/cancel][%d] postEventsEventCancelNotFound ", 404)
}

func (o *PostEventsEventCancelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
