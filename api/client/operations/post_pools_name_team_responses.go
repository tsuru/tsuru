// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostPoolsNameTeamReader is a Reader for the PostPoolsNameTeam structure.
type PostPoolsNameTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPoolsNameTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPoolsNameTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPoolsNameTeamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostPoolsNameTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostPoolsNameTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPoolsNameTeamOK creates a PostPoolsNameTeamOK with default headers values
func NewPostPoolsNameTeamOK() *PostPoolsNameTeamOK {
	return &PostPoolsNameTeamOK{}
}

/*PostPoolsNameTeamOK handles this case with default header values.

Pool updated
*/
type PostPoolsNameTeamOK struct {
}

func (o *PostPoolsNameTeamOK) Error() string {
	return fmt.Sprintf("[POST /pools/{name}/team][%d] postPoolsNameTeamOK ", 200)
}

func (o *PostPoolsNameTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsNameTeamBadRequest creates a PostPoolsNameTeamBadRequest with default headers values
func NewPostPoolsNameTeamBadRequest() *PostPoolsNameTeamBadRequest {
	return &PostPoolsNameTeamBadRequest{}
}

/*PostPoolsNameTeamBadRequest handles this case with default header values.

Invalid data
*/
type PostPoolsNameTeamBadRequest struct {
}

func (o *PostPoolsNameTeamBadRequest) Error() string {
	return fmt.Sprintf("[POST /pools/{name}/team][%d] postPoolsNameTeamBadRequest ", 400)
}

func (o *PostPoolsNameTeamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsNameTeamUnauthorized creates a PostPoolsNameTeamUnauthorized with default headers values
func NewPostPoolsNameTeamUnauthorized() *PostPoolsNameTeamUnauthorized {
	return &PostPoolsNameTeamUnauthorized{}
}

/*PostPoolsNameTeamUnauthorized handles this case with default header values.

Unauthorized
*/
type PostPoolsNameTeamUnauthorized struct {
}

func (o *PostPoolsNameTeamUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pools/{name}/team][%d] postPoolsNameTeamUnauthorized ", 401)
}

func (o *PostPoolsNameTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPoolsNameTeamNotFound creates a PostPoolsNameTeamNotFound with default headers values
func NewPostPoolsNameTeamNotFound() *PostPoolsNameTeamNotFound {
	return &PostPoolsNameTeamNotFound{}
}

/*PostPoolsNameTeamNotFound handles this case with default header values.

Pool not found
*/
type PostPoolsNameTeamNotFound struct {
}

func (o *PostPoolsNameTeamNotFound) Error() string {
	return fmt.Sprintf("[POST /pools/{name}/team][%d] postPoolsNameTeamNotFound ", 404)
}

func (o *PostPoolsNameTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
