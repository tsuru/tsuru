// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeletePlansNameReader is a Reader for the DeletePlansName structure.
type DeletePlansNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePlansNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePlansNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePlansNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePlansNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePlansNameOK creates a DeletePlansNameOK with default headers values
func NewDeletePlansNameOK() *DeletePlansNameOK {
	return &DeletePlansNameOK{}
}

/*DeletePlansNameOK handles this case with default header values.

Plan removed
*/
type DeletePlansNameOK struct {
}

func (o *DeletePlansNameOK) Error() string {
	return fmt.Sprintf("[DELETE /plans/{name}][%d] deletePlansNameOK ", 200)
}

func (o *DeletePlansNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlansNameUnauthorized creates a DeletePlansNameUnauthorized with default headers values
func NewDeletePlansNameUnauthorized() *DeletePlansNameUnauthorized {
	return &DeletePlansNameUnauthorized{}
}

/*DeletePlansNameUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePlansNameUnauthorized struct {
}

func (o *DeletePlansNameUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /plans/{name}][%d] deletePlansNameUnauthorized ", 401)
}

func (o *DeletePlansNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlansNameNotFound creates a DeletePlansNameNotFound with default headers values
func NewDeletePlansNameNotFound() *DeletePlansNameNotFound {
	return &DeletePlansNameNotFound{}
}

/*DeletePlansNameNotFound handles this case with default header values.

Plan not found
*/
type DeletePlansNameNotFound struct {
}

func (o *DeletePlansNameNotFound) Error() string {
	return fmt.Sprintf("[DELETE /plans/{name}][%d] deletePlansNameNotFound ", 404)
}

func (o *DeletePlansNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
