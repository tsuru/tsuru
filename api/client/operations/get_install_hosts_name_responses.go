// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetInstallHostsNameReader is a Reader for the GetInstallHostsName structure.
type GetInstallHostsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallHostsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstallHostsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetInstallHostsNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstallHostsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstallHostsNameOK creates a GetInstallHostsNameOK with default headers values
func NewGetInstallHostsNameOK() *GetInstallHostsNameOK {
	return &GetInstallHostsNameOK{}
}

/*GetInstallHostsNameOK handles this case with default header values.

OK
*/
type GetInstallHostsNameOK struct {
}

func (o *GetInstallHostsNameOK) Error() string {
	return fmt.Sprintf("[GET /install/hosts/{name}][%d] getInstallHostsNameOK ", 200)
}

func (o *GetInstallHostsNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstallHostsNameUnauthorized creates a GetInstallHostsNameUnauthorized with default headers values
func NewGetInstallHostsNameUnauthorized() *GetInstallHostsNameUnauthorized {
	return &GetInstallHostsNameUnauthorized{}
}

/*GetInstallHostsNameUnauthorized handles this case with default header values.

Unauthorized
*/
type GetInstallHostsNameUnauthorized struct {
}

func (o *GetInstallHostsNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /install/hosts/{name}][%d] getInstallHostsNameUnauthorized ", 401)
}

func (o *GetInstallHostsNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstallHostsNameNotFound creates a GetInstallHostsNameNotFound with default headers values
func NewGetInstallHostsNameNotFound() *GetInstallHostsNameNotFound {
	return &GetInstallHostsNameNotFound{}
}

/*GetInstallHostsNameNotFound handles this case with default header values.

Not Found
*/
type GetInstallHostsNameNotFound struct {
}

func (o *GetInstallHostsNameNotFound) Error() string {
	return fmt.Sprintf("[GET /install/hosts/{name}][%d] getInstallHostsNameNotFound ", 404)
}

func (o *GetInstallHostsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
