// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeletePoolsPoolReader is a Reader for the DeletePoolsPool structure.
type DeletePoolsPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePoolsPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePoolsPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeletePoolsPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePoolsPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePoolsPoolOK creates a DeletePoolsPoolOK with default headers values
func NewDeletePoolsPoolOK() *DeletePoolsPoolOK {
	return &DeletePoolsPoolOK{}
}

/*DeletePoolsPoolOK handles this case with default header values.

Pool removed
*/
type DeletePoolsPoolOK struct {
}

func (o *DeletePoolsPoolOK) Error() string {
	return fmt.Sprintf("[DELETE /pools/{pool}][%d] deletePoolsPoolOK ", 200)
}

func (o *DeletePoolsPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePoolsPoolUnauthorized creates a DeletePoolsPoolUnauthorized with default headers values
func NewDeletePoolsPoolUnauthorized() *DeletePoolsPoolUnauthorized {
	return &DeletePoolsPoolUnauthorized{}
}

/*DeletePoolsPoolUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePoolsPoolUnauthorized struct {
}

func (o *DeletePoolsPoolUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /pools/{pool}][%d] deletePoolsPoolUnauthorized ", 401)
}

func (o *DeletePoolsPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePoolsPoolNotFound creates a DeletePoolsPoolNotFound with default headers values
func NewDeletePoolsPoolNotFound() *DeletePoolsPoolNotFound {
	return &DeletePoolsPoolNotFound{}
}

/*DeletePoolsPoolNotFound handles this case with default header values.

Pool not found
*/
type DeletePoolsPoolNotFound struct {
}

func (o *DeletePoolsPoolNotFound) Error() string {
	return fmt.Sprintf("[DELETE /pools/{pool}][%d] deletePoolsPoolNotFound ", 404)
}

func (o *DeletePoolsPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
