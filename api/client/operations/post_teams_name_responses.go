// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostTeamsNameReader is a Reader for the PostTeamsName structure.
type PostTeamsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTeamsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostTeamsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostTeamsNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostTeamsNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostTeamsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostTeamsNameOK creates a PostTeamsNameOK with default headers values
func NewPostTeamsNameOK() *PostTeamsNameOK {
	return &PostTeamsNameOK{}
}

/*PostTeamsNameOK handles this case with default header values.

Team updated
*/
type PostTeamsNameOK struct {
}

func (o *PostTeamsNameOK) Error() string {
	return fmt.Sprintf("[POST /teams/{name}][%d] postTeamsNameOK ", 200)
}

func (o *PostTeamsNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostTeamsNameBadRequest creates a PostTeamsNameBadRequest with default headers values
func NewPostTeamsNameBadRequest() *PostTeamsNameBadRequest {
	return &PostTeamsNameBadRequest{}
}

/*PostTeamsNameBadRequest handles this case with default header values.

Invalid data
*/
type PostTeamsNameBadRequest struct {
}

func (o *PostTeamsNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /teams/{name}][%d] postTeamsNameBadRequest ", 400)
}

func (o *PostTeamsNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostTeamsNameUnauthorized creates a PostTeamsNameUnauthorized with default headers values
func NewPostTeamsNameUnauthorized() *PostTeamsNameUnauthorized {
	return &PostTeamsNameUnauthorized{}
}

/*PostTeamsNameUnauthorized handles this case with default header values.

Unauthorized
*/
type PostTeamsNameUnauthorized struct {
}

func (o *PostTeamsNameUnauthorized) Error() string {
	return fmt.Sprintf("[POST /teams/{name}][%d] postTeamsNameUnauthorized ", 401)
}

func (o *PostTeamsNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostTeamsNameNotFound creates a PostTeamsNameNotFound with default headers values
func NewPostTeamsNameNotFound() *PostTeamsNameNotFound {
	return &PostTeamsNameNotFound{}
}

/*PostTeamsNameNotFound handles this case with default header values.

Team not found
*/
type PostTeamsNameNotFound struct {
}

func (o *PostTeamsNameNotFound) Error() string {
	return fmt.Sprintf("[POST /teams/{name}][%d] postTeamsNameNotFound ", 404)
}

func (o *PostTeamsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
