// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetNodeAddressReader is a Reader for the GetNodeAddress structure.
type GetNodeAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNodeAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetNodeAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNodeAddressOK creates a GetNodeAddressOK with default headers values
func NewGetNodeAddressOK() *GetNodeAddressOK {
	return &GetNodeAddressOK{}
}

/*GetNodeAddressOK handles this case with default header values.

Ok
*/
type GetNodeAddressOK struct {
}

func (o *GetNodeAddressOK) Error() string {
	return fmt.Sprintf("[GET /node/{address}][%d] getNodeAddressOK ", 200)
}

func (o *GetNodeAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNodeAddressNotFound creates a GetNodeAddressNotFound with default headers values
func NewGetNodeAddressNotFound() *GetNodeAddressNotFound {
	return &GetNodeAddressNotFound{}
}

/*GetNodeAddressNotFound handles this case with default header values.

Not found
*/
type GetNodeAddressNotFound struct {
}

func (o *GetNodeAddressNotFound) Error() string {
	return fmt.Sprintf("[GET /node/{address}][%d] getNodeAddressNotFound ", 404)
}

func (o *GetNodeAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
