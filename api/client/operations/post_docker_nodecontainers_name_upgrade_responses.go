// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostDockerNodecontainersNameUpgradeReader is a Reader for the PostDockerNodecontainersNameUpgrade structure.
type PostDockerNodecontainersNameUpgradeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDockerNodecontainersNameUpgradeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostDockerNodecontainersNameUpgradeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostDockerNodecontainersNameUpgradeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostDockerNodecontainersNameUpgradeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostDockerNodecontainersNameUpgradeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDockerNodecontainersNameUpgradeOK creates a PostDockerNodecontainersNameUpgradeOK with default headers values
func NewPostDockerNodecontainersNameUpgradeOK() *PostDockerNodecontainersNameUpgradeOK {
	return &PostDockerNodecontainersNameUpgradeOK{}
}

/*PostDockerNodecontainersNameUpgradeOK handles this case with default header values.

Ok
*/
type PostDockerNodecontainersNameUpgradeOK struct {
}

func (o *PostDockerNodecontainersNameUpgradeOK) Error() string {
	return fmt.Sprintf("[POST /docker/nodecontainers/{name}/upgrade][%d] postDockerNodecontainersNameUpgradeOK ", 200)
}

func (o *PostDockerNodecontainersNameUpgradeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDockerNodecontainersNameUpgradeBadRequest creates a PostDockerNodecontainersNameUpgradeBadRequest with default headers values
func NewPostDockerNodecontainersNameUpgradeBadRequest() *PostDockerNodecontainersNameUpgradeBadRequest {
	return &PostDockerNodecontainersNameUpgradeBadRequest{}
}

/*PostDockerNodecontainersNameUpgradeBadRequest handles this case with default header values.

Invald data
*/
type PostDockerNodecontainersNameUpgradeBadRequest struct {
}

func (o *PostDockerNodecontainersNameUpgradeBadRequest) Error() string {
	return fmt.Sprintf("[POST /docker/nodecontainers/{name}/upgrade][%d] postDockerNodecontainersNameUpgradeBadRequest ", 400)
}

func (o *PostDockerNodecontainersNameUpgradeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDockerNodecontainersNameUpgradeUnauthorized creates a PostDockerNodecontainersNameUpgradeUnauthorized with default headers values
func NewPostDockerNodecontainersNameUpgradeUnauthorized() *PostDockerNodecontainersNameUpgradeUnauthorized {
	return &PostDockerNodecontainersNameUpgradeUnauthorized{}
}

/*PostDockerNodecontainersNameUpgradeUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDockerNodecontainersNameUpgradeUnauthorized struct {
}

func (o *PostDockerNodecontainersNameUpgradeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /docker/nodecontainers/{name}/upgrade][%d] postDockerNodecontainersNameUpgradeUnauthorized ", 401)
}

func (o *PostDockerNodecontainersNameUpgradeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDockerNodecontainersNameUpgradeNotFound creates a PostDockerNodecontainersNameUpgradeNotFound with default headers values
func NewPostDockerNodecontainersNameUpgradeNotFound() *PostDockerNodecontainersNameUpgradeNotFound {
	return &PostDockerNodecontainersNameUpgradeNotFound{}
}

/*PostDockerNodecontainersNameUpgradeNotFound handles this case with default header values.

Not found
*/
type PostDockerNodecontainersNameUpgradeNotFound struct {
}

func (o *PostDockerNodecontainersNameUpgradeNotFound) Error() string {
	return fmt.Sprintf("[POST /docker/nodecontainers/{name}/upgrade][%d] postDockerNodecontainersNameUpgradeNotFound ", 404)
}

func (o *PostDockerNodecontainersNameUpgradeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
